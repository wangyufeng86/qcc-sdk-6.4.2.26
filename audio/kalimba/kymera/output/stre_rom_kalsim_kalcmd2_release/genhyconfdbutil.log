Schema version verified.
Creating new database /home/svc-audio-dspsw/kymera_builds/builds/2019/kymera_1912051504/kalimba/kymera/output/stre_rom_kalsim_kalcmd2_release/gen/audio_mib.sdb
DROP TABLE IF EXISTS schema_version;
DROP TABLE IF EXISTS system_versions;
DROP TABLE IF EXISTS subsystem_firmware_versions;
DROP TABLE IF EXISTS system_subfw_versions;
DROP TABLE IF EXISTS system_efuse_hashes;
DROP TABLE IF EXISTS patch_files;
DROP TABLE IF EXISTS config_elements;
DROP TABLE IF EXISTS subfw_elements;
DROP TABLE IF EXISTS enum_defs;
DROP TABLE IF EXISTS enum_entry;
DROP TABLE IF EXISTS struct_defs;
DROP TABLE IF EXISTS structure_elements;
DROP TABLE IF EXISTS config_tables;
DROP TABLE IF EXISTS config_table_indices;
DROP TABLE IF EXISTS config_element_default_values;
DROP TABLE IF EXISTS subfw_defaults;
DROP TABLE IF EXISTS default_arrays;
DROP TABLE IF EXISTS functions;
-- Hydra config database schema

-- >>>>>>>>>>>>>>>>>>> Make sure the VERSION NUMBER at the bottom of the file is updated when the database structure is changed <<<<<<<<<<<<<<<<<<<<<<<<<<<<

-- Version 1 = original
-- Version 2 = addition of array_length_min/max to config_elements


-- notes on hashes:
-- The hashes are to identify existing elements, defaults, structures, etc. that contain identical information to some new element
-- When the table containing the hash has other tables hanging off it, the hash will contain information from those subordinate table's rows.  
-- The hashes will not be derived from any of the uids, though - these serve as foreign keys, etc. but don't identify the data.
  
  create table schema_version (
    schema_version integer not null primary key
);


create table system_versions (
    system_uid integer,
    chip_name varchar(80),
    chip_id integer,
    rom_name varchar(80),
    rom_version integer,
    patch_release_level integer,
    system_version_label varchar(80),
    system_description text,
    customer_name varchar(80),
    system_release_date_time datetime,
    metadata_hash varchar(33), -- an MD5 hash of the hashes of all elements relevant to this combination of subfw_ids
    primary key (system_uid)
);


create table subsystem_firmware_versions (
    subfw_uid integer,
    subsystem_name varchar(20),
    subsystem_layer varchar(20),
    subsystem_alias varchar(20),
    subsystem_id integer, -- enum value from FILENAME_SUBSYSTEM_ID defined in filename.xml / filename_prim.h
    version integer,
    variant integer,
    description text,
    build_date_time datetime,
    primary key (subfw_uid)
);


create table system_subfw_versions (
    system_uid integer,
    subfw_uid integer,
    primary key (system_uid, subfw_uid),
    foreign key (subfw_uid) references subsystem_firmware_versions(subfw_uid),
    foreign key (system_uid) references system_versions(system_uid)
);


create table system_efuse_hashes (
    system_uid integer,
    efuse_hash integer,
    foreign key (system_uid) references system_versions(system_uid)
);


create table patch_files (
    subfw_uid integer,
    patch_level integer,
    patch_hash varchar(33), -- an MD5 hash of the patch file
    foreign key (subfw_uid) references subsystem_firmware_versions (subfw_uid)
);



-- An element might appear in a table as a Value, and under these circumstances there'll be a table name specified in the config_element.
-- the Indexes surrounding the tabled value are specified in the config_table_indices above.
-- a particular elem_uid can appear as an index in several tables, but a Value can appear only in one table, 
--  i.e. the config_element itself will name the table it's in. 

-- contains just unique versions of these items
create table config_elements (
    elem_uid integer, -- this is the unique ID for this version of the config element.
    psid integer, -- this is the PSID-like ID.  There might be several versions of elems all with this ID.  These mignt also be NULL IDs, e.g. for array elements which are actually structures, and for table indices
    name varchar(80),
    label text,
    category varchar(40),
    is_internal boolean default 0,
    format varchar(20),
    range_min integer,
    range_max integer,
    oid varchar(20), -- BER encoded dotted decimal number for this, when referring to wi-fi data
    type varchar(80) not null,  -- either integer, octet_string, uint8, int8, uint16, int16, uint32, int32, uint64, int64, a struct_name or an enum_name
    units varchar(80),
    is_array bool default 0, -- indicates that this element can contain a number of elements of the defined type, where the number may be constrained by array_length_min and/or array_length_max.
    array_length_min integer,
    array_length_max integer,
    description_user text,
    description_internal text,
    additional_information text,
    source_reference text, -- description of the origin of this config element.
    source_default varchar(20),
    access_rights varchar(14),  -- One of read_write, read_only, write_only, not_accessible.
    hash varchar(33), -- an MD5 hash of the contents of all the fields in the config_elements table (except for the elem_uid)
    primary key (elem_uid)
);


create table subfw_elements (
    subfw_uid integer, 
    elem_uid integer,
    enum_uid integer,
    struct_uid integer,
    table_uid integer,
    primary key (subfw_uid, elem_uid),
    foreign key (subfw_uid) references subsystem_firmware_versions(subfw_uid),
    foreign key (elem_uid) references config_elements(elem_uid)
    foreign key (enum_uid) references enum_defs(enum_uid)
    foreign key (struct_uid) references struct_defs(struct_uid)
    foreign key (table_uid) references config_tables(table_uid)
);


-- contains just unique versions of these items
create table enum_defs (
    enum_uid integer,
    enum_name varchar(80),
    hash varchar(33), -- an MD5 hash of the enum_name, the enum_include and all of the enum_entries' names and values.
    primary key (enum_uid)
);


create table enum_entry (
    enum_entry_uid integer,
    enum_uid integer,
    enum_label varchar(80),
    enum_value integer,
    enum_description text,
    primary key (enum_entry_uid),
    foreign key (enum_uid) references enum_defs (enum_uid)
);



create table struct_defs (
    struct_uid integer,
    struct_name varchar(80),
    hash varchar(33), -- an MD5 hash of struct_name and all the config_element contents pointed to by structure elements referencing this structure definition.
    primary key (struct_uid)
);


-- contains just unique versions of these items
create table structure_elements (
    struct_uid integer,
    elem_uid integer,
    lsb_bit_position integer, -- the position in bits of this structure element, counting from the msb in the parent object, little-endian
    bit_width integer, -- the length in bits represented by this structure element in the'master' element, at offset above.
    primary key (struct_uid, elem_uid),
    foreign key (struct_uid) references struct_defs (struct_uid),
    foreign key (elem_uid) references config_elements (elem_uid)
);



create table config_tables ( -- Tables are first-class objects, at the level of config_elements.  
-- They contain rows and columns.  The columns are config elements themselves.
    table_uid integer primary key,
    table_name varchar(80),
    description_user text,
    description_internal text,
    oid varchar(20),  -- the BER encoded (dotted decimal) representation of the table.
    source_reference text, -- description of the origin of this table.
    is_internal boolean default 0,
    num_indices integer,
    hash varchar(33) -- an MD5 hash of the contents of the name and the index info
);



create table config_table_indices (
    table_uid integer,
    elem_uid integer not null,
    position integer,
    primary key (table_uid, elem_uid),
    foreign key (table_uid) references config_tables (table_uid),
    foreign key (elem_uid) references config_elements (elem_uid)
);



create table config_element_default_values (
   def_uid integer not null, 
   elem_uid integer not null, -- the 'leaf' element for which this default value applies
   value_string text,
   value_int integer,
   index1_value integer,
   index2_value integer,
   index3_value integer,
   hash varchar(33), -- an MD5 hash of the contents of the name and the index info
   primary key (def_uid),
   foreign key (elem_uid) references config_elements (elem_uid)
);



create table subfw_defaults (
    subfw_uid  integer, 
    def_uid integer,
    primary key (subfw_uid, def_uid),
    foreign key (subfw_uid) references subsystem_firmware_versions (subfw_uid),
    foreign key (def_uid) references config_element_default_values (def_uid)
);



create table default_arrays (
    def_uid integer,
    value integer,
    foreign key (def_uid) references config_element_default_values (def_uid)
);



create table functions (
    func_uid integer,
    elem_uid integer,
    function_name varchar(80),
    type varchar(20),
    is_for_vif boolean,
    primary key (func_uid)
);



INSERT INTO schema_version VALUES(2) -- <<<<<<<<<<<<   Make sure this VERSION NUMBER (and the copy in hyconfdbutil.pl) is updated when the database structure is changed <<<<<<<<<<<<<<<<<<<<<<<<<<<<

;

;
Adding /home/svc-audio-dspsw/kymera_builds/builds/2019/kymera_1912051504/kalimba/kymera/output/stre_rom_kalsim_kalcmd2_release/gen/audio_mib.xml to /home/svc-audio-dspsw/kymera_builds/builds/2019/kymera_1912051504/kalimba/kymera/output/stre_rom_kalsim_kalcmd2_release/gen/audio_mib.sdb
Adding metadata for audio version 8991 variant 0
INSERT INTO subsystem_firmware_versions (subfw_uid, version, variant, subsystem_id, subsystem_name, subsystem_layer, subsystem_alias, description, build_date_time) VALUES(NULL, '8991', '0', '3', 'audio', '', '', '', '');
SELECT max(subfw_uid) FROM subsystem_firmware_versions;
INSERT INTO enum_defs (enum_uid, enum_name, hash) VALUES(NULL, 'boolean', '28a8e090f7a2a5ee54c414daec6fe053');
SELECT max(enum_uid) FROM enum_defs;
INSERT INTO enum_entry (enum_entry_uid, enum_uid, enum_label, enum_value, enum_description) VALUES(NULL, '1', 'true', '1', '');
INSERT INTO enum_entry (enum_entry_uid, enum_uid, enum_label, enum_value, enum_description) VALUES(NULL, '1', 'false', '0', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c3ac5254bc26c7950bb314b39055245d', 'Codec0UseClassABAmplifier', '428', 'Connect the DAC to a class AB amplifier instead of a class D amplifier', '', 'When this key is set to true, the audio DACs are connected to a class AB amplifier
instead of a class D amplifier. The use of a class D amplifier is recommended in headphone
applications while the use of a class AB amplifier is recommended for line output. The line
can then be connected to another amplifier capable of driving the speakers used in a sound
bar application.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c3ac5254bc26c7950bb314b39055245d';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '1', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '1', '', '0', '', '', '', 'e1afc6747ed7ef1e9fe6174300542052');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e1afc6747ed7ef1e9fe6174300542052';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '1');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '2806f0eff19f0298d250f077fe74d793', 'Codec0OutputSidetoneInvertB', '221', 'Inverts the sidetone phase on the second channel of the first codec output', '', '', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '2806f0eff19f0298d250f077fe74d793';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '2', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '2', '', '0', '', '', '', '7dae23a1ce7c827e83785ea465bf5a93');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7dae23a1ce7c827e83785ea465bf5a93';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '2');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b7ccd6692370d74410341e98c82bbf04', 'Pcm2SlotCount', '96', 'Number of slots in a PCM frame for third PCM instance', '', 'This key specifies the number of PCM slots (1-4) that are to be present
between sync pulses on the third digital interface.
If the key Pcm2MasterClockRate is set, this key is ignored as a
request has been made for a specific master clock frequency.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '4');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b7ccd6692370d74410341e98c82bbf04';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '3', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '3', '', '0', '', '', '', '38845c64c19748f6faa756fd560fd84b');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '38845c64c19748f6faa756fd560fd84b';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '3');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'ff4637ed8a82d020b640e19609409842', 'I2s2MasterMode', '136', 'Enable master mode on third I2S instance', '', 'Setting the key to TRUE configures the hardware to generate the clock and
sync signals on the third I2S instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'ff4637ed8a82d020b640e19609409842';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '4', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '4', '', '0', '', '', '', '35ec178420e8b65474b6a1c0e1e15a8a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '35ec178420e8b65474b6a1c0e1e15a8a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '4');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '973a935cb7335f115bf3d5bec6ef0da3', 'I2sMasterClockRate', '34', 'Master clock rate in hertz for first I2S instance', '', 'When acting as a master on the first digital interface in I2S mode, this key
allows the specification in hertz of the exact clock rate to be generated.

If set to zero, the firmware calculates the clock rate based on the
sync rate and bits per sample.

Note: the name MasterClockRate is historical; this key pertains to the bit
clock frequency, not the frequency of any MCLK signal in the system.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '0', '8000000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '973a935cb7335f115bf3d5bec6ef0da3';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '5', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '5', '', '0', '', '', '', 'e65f0e05da6f6434aad413a3ab66a176');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e65f0e05da6f6434aad413a3ab66a176';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '5');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b399f98698edb89c5652a850feeab043', 'DigMic3SidetoneGainB', '333', 'Configures the sidetone gain for the second channel of the fourth digital microphone', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b399f98698edb89c5652a850feeab043';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '6', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c95f289e3f79668858867598f2a23e80', 'Pcm3MuteEnable', '112', 'Mute PCM_DATA output for fourth PCM instance', '', 'Force PCM_DATA output on fourth PCM instance to be muted.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c95f289e3f79668858867598f2a23e80';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '7', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '7', '', '0', '', '', '', 'bf68c7f733a46f34fcd1a89703d4a1e7');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'bf68c7f733a46f34fcd1a89703d4a1e7';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '6');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'd6c5fdcb403ab957358c7b09f08e1a75', 'Pcm1LsbFirstEnable', '65', 'Enable LSB first for second PCM instance', '', 'This key controls the order in which samples are transmitted and
received on the second PCM interface. Set this key to send/receive
LSB first.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'd6c5fdcb403ab957358c7b09f08e1a75';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '8', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '8', '', '0', '', '', '', 'eca3e522b0d8c6acd17c61099d759dc5');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'eca3e522b0d8c6acd17c61099d759dc5';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '7');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '27cf5ebf1328657e1c06946353addcab', 'Codec1InputDataSource', '228', 'Configures the signal routing within the second codec input', '', 'ADC data source selection from:
0: output of the IIR Filter
1: output of the digital gain stage', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '27cf5ebf1328657e1c06946353addcab';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '9', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '9', '', '1', '', '', '', 'f24250c9a279e6b23c49f1c0bd180719');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f24250c9a279e6b23c49f1c0bd180719';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '8');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '553839e02d1838d1651f2d5e735029bd', 'Pcm1SignExtendEnable', '64', 'Enable sign extend for second PCM instance', '', 'Enable sign extension of 13/8-bit samples to 16-bit samples on the second
PCM interface.

If the key is not set, the samples are padded to 16-bits by inserting
extra LSBs. For 13-bit samples, the 3-bit padding can be selected by
setting Pcm1AudioGain accordingly. 8-bit samples are padded with zeros.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '553839e02d1838d1651f2d5e735029bd';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '10', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '10', '', '0', '', '', '', '0436aeff97ddd77eb28d57bdef4cbd1c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '0436aeff97ddd77eb28d57bdef4cbd1c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '9');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1aaf280f01a0eceed655d206c2bb10c9', 'Codec1InputRoute', '229', 'Configures the signal routing within the second codec input', '', 'ADC chain routing:
0: IIR filter followed by Digital gain
1: Digital gain followed by IIR filter', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1aaf280f01a0eceed655d206c2bb10c9';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '11', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '11', '', '0', '', '', '', '60da2adc4ddef355cebe07ef67737e3f');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '60da2adc4ddef355cebe07ef67737e3f';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '10');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'cfbd5cba93805d59c510087031210176', 'Pcm2MuteEnable', '91', 'Mute PCM_DATA output for third PCM instance', '', 'Force PCM_DATA output on third PCM instance to be muted.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'cfbd5cba93805d59c510087031210176';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '12', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '12', '', '0', '', '', '', '49c6f30ca38cd89cc7c8b467c804d665');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '49c6f30ca38cd89cc7c8b467c804d665';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '11');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b1fdb52abc7570b1cc1ca228c05c67f0', 'I2s1SampleSize', '171', 'Sample size for the second I2S interface', '', 'The sample size is either 16 bits or 24 bits.
16: 16 bit
24: 24 bit
This setting applies to both input and output, and to both channels.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b1fdb52abc7570b1cc1ca228c05c67f0';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '13', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '13', '', '16', '', '', '', '335e3b00e861648a20665622d0fd4e6d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '335e3b00e861648a20665622d0fd4e6d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '12');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b3ddc5e62d3079076d41504a50b54983', 'I2s3AudioAtten', '153', 'Attenuation in 6 dB steps for fourth I2S instance', '', '', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b3ddc5e62d3079076d41504a50b54983';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '14', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '14', '', '0', '', '', '', '61ffdeacf24b4c30e3a9b87273468352');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '61ffdeacf24b4c30e3a9b87273468352';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '13');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '45499d92f8145674cda07796b59ced9e', 'DigMic1DataSource', '294', 'Configures the signal routing within the second digital microphone', '', 'ADC data source selection from:
0: output of the IIR Filter
1: output of the digital gain stage', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '45499d92f8145674cda07796b59ced9e';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '15', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '15', '', '1', '', '', '', 'e12755ee350a2fd5c5a9e2cffad7e953');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e12755ee350a2fd5c5a9e2cffad7e953';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '14');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '454dcdb78ae280ff2cb1133533c85527', 'I2s2BitsPerSample', '142', 'Bits per sample for third I2S instance', '', 'This key specifies the number of bit clocks reserved for each (mono)
sample on the third I2S interface. Valid settings are 16, 20, or
24 bits per sample.

This key does not specify how many of those bits are used for internal
data processing; see I2s2SampleSize for that. If this key is set to
a value larger than I2s2SampleSize, the additional bits are output as
zeroes in the least significant bits. On the input, if sample size
is 16 bits and bits-per-sample is greater, an attenuation can be
applied, or samples larger than 16bit can be cropped to 16bits.

This key is also used to calculate the bit clock rate when in
master mode and the I2s2MasterClockRate key is not set.
(I2s2MasterClockRate takes precedence over this key for the
purposes of supplying the master clock rate.) The calculation is
bits per sample * 2 (channels) * sample rate.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '454dcdb78ae280ff2cb1133533c85527';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '16', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '16', '', '16', '', '', '', 'd515a8ef5449cbba7af65617057f819b');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd515a8ef5449cbba7af65617057f819b';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '15');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '95a3cd883e128fc113954a047c835eab', 'Pcm1GciModeEnable', '69', 'Enable GCI mode for second PCM instance', '', 'Enable PCM GCI mode.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '95a3cd883e128fc113954a047c835eab';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '17', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '17', '', '0', '', '', '', 'd3a9ff7e345d34dfac6bc5057bc7663e');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd3a9ff7e345d34dfac6bc5057bc7663e';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '16');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3cad910608415f26701b61206bdf8db7', 'Pcm3TxTristateRisingEdgeEnable', '109', 'Enable Tx tristate rising edge for fourth PCM instance', '', 'This key is only effective if Pcm3TxTristateEnable is set
0: tri-state PCM_OUT immediately after falling edge of PCM_CLK in
last bit of an active slot, assuming the next slot is also not active.
1: tri-state PCM_OUT after rising edge of PCM_CLK after the last data
bit of an active slot.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3cad910608415f26701b61206bdf8db7';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '18', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '18', '', '0', '', '', '', '65cd8ca51ea23b0a60d224b2082a596d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '65cd8ca51ea23b0a60d224b2082a596d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '17');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '6cb4f74e7a6f30ac07a2a2d60d6de187', 'RelaxMallocStrictness', '477', 'Relax strictness in memory allocation preference', '', '           In use cases that are memory intensive, this key can be set to one
           of four possible valies to allow the malloc algorithm to try another
           preference (eg: MALLOC_PREFERENCE_DM1 instead of MALLOC_PREFERENCE_DM2)
           or another allocation method rather than failing the allocation totally.
           Possible values:
           0: Default.
              Memory allocation mechanism attempts to allocate evenly between
              DM1 and DM2 (called load balancing) for MALLOC_PREFERENCE_NONE.
              No fallback for MALLOC_PREFERENCE_DM1 and MALLOC_PREFERENCE_DM2.
           1: Load balancing enabled for MALLOC_PREFERENCE_NONE.
              Failure to allocate from the requested region for
              MALLOC_PREFERENCE_DM1 or MALLOC_PREFERENCE_DM2 will fallback
              to the other region.
           2: DM1 as the preferred region for MALLOC_PREFERENCE_NONE option
              with no load balancing.
              Failure to allocate from the requested region for
              MALLOC_PREFERENCE_DM1 or MALLOC_PREFERENCE_DM2 will fallback
              to the other region.
           3: DM2 as the preferred region for MALLOC_PREFERENCE_NONE option
              with no load balancing.
              Failure to allocate from the requested region for
              MALLOC_PREFERENCE_DM1 or MALLOC_PREFERENCE_DM2 will fallback
              to the other region.
           Please note this may have an impact on performance.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '6cb4f74e7a6f30ac07a2a2d60d6de187';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '19', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '19', '', '0', '', '', '', '735765b36605e5310960f9db661d9782');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '735765b36605e5310960f9db661d9782';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '18');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '4e5cbf83815c33af3b6dc1da3f4cec0f', 'PcmLsbFirstEnable', '19', 'Enable LSB first for first PCM instance', '', 'This key controls the order in which samples are transmitted and
received on the first PCM interface. Set this key to send/receive
LSB first.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '4e5cbf83815c33af3b6dc1da3f4cec0f';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '20', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '20', '', '0', '', '', '', '810b9854087513e7ad43877f67d2e797');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '810b9854087513e7ad43877f67d2e797';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '19');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '28b38013c743168a47241c060958354a', 'PcmSyncRate', '30', 'The PCM_SYNC rate for first PCM instance', '', 'This key specifies the sync rate in hertz for the first digital
interface when operating as a master in PCM mode.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '96000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '28b38013c743168a47241c060958354a';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '21', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '21', '', '8000', '', '', '', '186d522d8c4d72cb1d7c514b08ec31dc');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '186d522d8c4d72cb1d7c514b08ec31dc';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '20');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'f5992c33c4b72b4b86a116e83f32333f', 'DigMic2AmpSel', '308', 'Configures the input levels for the third digital microphone', '', 'Valid choices are: 0x0700, 0x0601, 0x0502, 0x0403.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '1027', '1792');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'f5992c33c4b72b4b86a116e83f32333f';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '22', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '22', '', '1792', '', '', '', '11dd44115542d2cbe04da0cd86faa61f');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '11dd44115542d2cbe04da0cd86faa61f';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '21');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'fc6bf509704f69b8fcb017843f7d0c45', 'DigMic2PioConfig', '164', 'PIO configuration for third Digital Mic instance', '', '            This key defines how pins for third Digital Mic instance (instance 2) are configured.
            The octet string key value contains a value each for the CLK_OUT & DATA_IN signal lines
            in that order. Each signal can be specified to use
                0x00 - 0x5F: PIO number or
            If the signal is not required, it should be set to
                0xFF: Unused
            If multiple digital mic instances share the same clock pin, set the CLK_OUT signal on any one
            of the instances to the required PIO number and set it to Unused on all the other instances.
            All digital mic channels that share a clock in this way must be placed in a sync group. Also,
            digital mic endpoints on the instance that defines CLK_OUT should be connected first for the
            clock to be enabled.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '2', '2');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'fc6bf509704f69b8fcb017843f7d0c45';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '23', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '23', '', '', '', '', '', '440bb07a48d9a2bb557222278344a595');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '440bb07a48d9a2bb557222278344a595';
INSERT INTO default_arrays (def_uid, value) VALUES ('22', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('22', '255');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '22');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '70bd2c5e3cba531f8a72b48d79943998', 'Codec0InputSidetoneSourceB', '203', 'Configures the sidetone source point for the second channel of the first codec input', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '70bd2c5e3cba531f8a72b48d79943998';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '24', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '24', '', '0', '', '', '', '6a57d01520bc52e6a3d1a17075635225');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '6a57d01520bc52e6a3d1a17075635225';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '23');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3c94b8f709716acad491d9f1b01aaacd', 'DefaultLogLevel', '427', 'Configures the default audio subsystem log level', '', 'The audio subsystem logging provided in Pydbg or ACAT can be adjusted to show
more or less verbose information. Although this can be configured at run time,
early messages may be not be shown unless a higher default level is configured.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '5');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3c94b8f709716acad491d9f1b01aaacd';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '25', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '25', '', '2', '', '', '', '545f01b3fc312f40ee233c9bc6199283');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '545f01b3fc312f40ee233c9bc6199283';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '24');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '79826cd28341f7cac627236e2a4bf1aa', 'I2s3BitsPerSample', '154', 'Bits per sample for fourth I2S instance', '', 'This key specifies the number of bit clocks reserved for each (mono)
sample on the fourth I2S interface. Valid settings are 16, 20, or
24 bits per sample.

This key does not specify how many of those bits are used for internal
data processing; see I2s3SampleSize for that. If this key is set to
a value larger than I2s3SampleSize, the additional bits are output as
zeroes in the least significant bits. On the input, if sample size
is 16 bits and bits-per-sample is greater, an attenuation can be
applied, or samples larger than 16bit can be cropped to 16bits.

This key is also used to calculate the bit clock rate when in
master mode and the I2s3MasterClockRate key is not set.
(I2s3MasterClockRate takes precedence over this key for the
purposes of supplying the master clock rate.) The calculation is
bits per sample * 2 (channels) * sample rate.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '79826cd28341f7cac627236e2a4bf1aa';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '26', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '26', '', '16', '', '', '', '71130f015052a4296a1c263e5b7c1fec');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '71130f015052a4296a1c263e5b7c1fec';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '25');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '6a8f4b4ce388087a0805d9d15054d651', 'Codec1OutputSampleSize', '244', 'Sample size for the second codec output', '', 'The sample size for processing is either 16 or 24 bits.
16: 16 bit
24: 24 bit', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '6a8f4b4ce388087a0805d9d15054d651';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '27', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '27', '', '24', '', '', '', 'a25b70471fa70fb936572dba39151a9c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a25b70471fa70fb936572dba39151a9c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '26');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'd9c517b016770803189b4a54bb1f3e2b', 'I2sLftJstfyDly', '37', 'Set delay before sampling when left justified for first I2S instance', '', '0: MSB of sample data occurs in the first bit clock period after sync transition.
1: MSB of sample data occurs in the second bit clock period after sync transition.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'd9c517b016770803189b4a54bb1f3e2b';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '28', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '28', '', '1', '', '', '', '47f69e401ddb48d674d3619b344238f2');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '47f69e401ddb48d674d3619b344238f2';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '27');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3f9a5b2765be66384baced7b1c648aba', 'DigMic3ChanSwap', '322', 'Swap the two channels of the fourth digital microphone', '', 'If set, the two channels of the fourth digital microphone are swapped,
i.e. the bit clock is inverted.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3f9a5b2765be66384baced7b1c648aba';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '29', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '29', '', '0', '', '', '', 'e3f23f63e4d0ec8de27116cccfe12fde');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e3f23f63e4d0ec8de27116cccfe12fde';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '28');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'fcfde4c3977d8c5ad00d7b10ea1a3d1d', 'Codec1OutputSidetoneSourceMaskB', '249', 'Enables sidetone source channels for output on the second channel of the second codec output', '', 'This is a bitmask of 8 bits, one for each source channel. A maximum of two bits can be set at the same time.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '192');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'fcfde4c3977d8c5ad00d7b10ea1a3d1d';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '30', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '30', '', '0', '', '', '', 'f7842b5bc2df0e9b6995b79b324332c8');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f7842b5bc2df0e9b6995b79b324332c8';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '29');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '4c92d27997517029cd50a74bbe4493e7', 'Pcm3ShortSyncEnable', '104', 'Enable short synchronisation for fourth PCM instance', '', 'Setting this key enables Short frame sync (sync pulse width of 1 bit clock cycle,
falling edge indicates start of frame) on the fourth PCM instance.

If long frame sync is selected the frame starts at rising edge of the sync pulse and
Sync pulse width depends on Pcm3LongLengthSyncEnable configuration', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '4c92d27997517029cd50a74bbe4493e7';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '31', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '31', '', '0', '', '', '', '93ebdc26c6241b609d835ddec4853b85');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '93ebdc26c6241b609d835ddec4853b85';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '30');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '6068727e905196a4f607f3d5a6d81756', 'I2s1AudioAttenEnable', '128', 'Enable attenuation on input data for second I2S instance', '', 'Enables/disables the attenuation applied to incoming (into device) audio samples in case the I2s1BitsPerSample
is set to 20 or 24 bits per sample on the second I2S instance.

false: 17 bit sample data is rounded down to 16 bits.
true : the audio attenuation defined in the MIB key I2s1AudioAtten is applied over 24 bits with saturated rounding.

Requires I2s1CropEnable to be 0.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '6068727e905196a4f607f3d5a6d81756';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '32', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '32', '', '0', '', '', '', '413515cc21223bd3f8581b6b529a4065');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '413515cc21223bd3f8581b6b529a4065';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '31');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '8fdd50c6ccd1331b53ff14a06e07ace0', 'DigMic0SidetoneGainB', '285', 'Configures the sidetone gain for the second channel of the first digital microphone', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = '8fdd50c6ccd1331b53ff14a06e07ace0';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '33', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c0ac8c27ce5deb80124193cfde012a1c', 'Pcm1PioConfig', '51', 'PIO configuration for second PCM/I2S instance', '', '            This key defines which chip pins the second PCM or I2S interface (instance 1)
            comes out on. (The same pins are shared by these two interfaces, so they
            cannot be used simultaneously.)
            The octet string key value contains a value each for the PCM signal lines
            CLK, SYNC, MCLK, DOUT & DIN (or, for I2S: SCK, WS, MCLK, SD_OUT, & SD_IN).
            Each signal can be specified to use
                0x00 - 0x5F: PIO number or
                0xFE: Dedicated pin as per chip pinout
            If the signal is not required, it should be set to
                0xFF: Unused
            Note that signals cannot be a combination of PIO and dedicated pins.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '5', '5');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c0ac8c27ce5deb80124193cfde012a1c';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '34', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '34', '', '', '', '', '', '7970940a83616e07896e242483e35e3d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7970940a83616e07896e242483e35e3d';
INSERT INTO default_arrays (def_uid, value) VALUES ('32', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('32', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('32', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('32', '254');
INSERT INTO default_arrays (def_uid, value) VALUES ('32', '254');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '32');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e8ebed1765487b040ebc381367b3f5a0', 'PcmSignExtendEnable', '18', 'Enable sign extend for first PCM instance', '', 'Enable sign extension of 13/8-bit samples to 16-bit samples on the first
PCM interface.

If the key is not set, the samples are padded to 16-bits by inserting
extra LSBs. For 13-bit samples, the 3-bit padding can be selected by
setting PcmAudioGain accordingly. 8-bit samples are padded with zeros.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e8ebed1765487b040ebc381367b3f5a0';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '35', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '35', '', '0', '', '', '', 'c0fc31c3af015811ba296d6e97827a16');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'c0fc31c3af015811ba296d6e97827a16';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '33');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3597b8d57d7593556f0a4fae2318701d', 'Codec0RawInputGain', '193', 'Low level gain control for the first codec input', '', 'The value for this key consists of bit fields for registers which
control the codec input gain. Refer to the device datasheet for details
of this setting.
When a valid value for this key is defined, the value of Codec0InputGain is ignored.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3597b8d57d7593556f0a4fae2318701d';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '36', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'd1fccec0caabfe4f5c4f41b5bd2f2984', 'I2s2TxStartSample', '144', 'Defines when TX begins for third I2S instance', '', '0: I2S transmission begins during low sync clock phase.
1: I2S transmission begins during high sync clock phase.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'd1fccec0caabfe4f5c4f41b5bd2f2984';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '37', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '37', '', '0', '', '', '', '62020355c602b9028e1bfe012fd6b2fa');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '62020355c602b9028e1bfe012fd6b2fa';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '34');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '39a910c706c48901c49ce3751706fad7', 'Pcm3LsbFirstEnable', '107', 'Enable LSB first for fourth PCM instance', '', 'This key controls the order in which samples are transmitted and
received on the fourth PCM interface. Set this key to send/receive
LSB first.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '39a910c706c48901c49ce3751706fad7';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '38', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '38', '', '0', '', '', '', '13f9f5a0c26977a8f19b810977b93085');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '13f9f5a0c26977a8f19b810977b93085';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '35');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '6154c2f33c03974979cc2f904e00945a', 'USBSinkTimedPlaybackIfactor', '439', 'To host USB Timed playback setting: I factor', '', 'I factor for the USB to host timed playback pid controller.

default value: FRACTIONAL(0.9) = 0x73333332 = 1932735282', '', '', '', '', '', '', '', '1', 'int32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '6154c2f33c03974979cc2f904e00945a';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '39', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '39', '', '1932735282', '', '', '', '2ae17b3313a65fa103ccc60e993e7475');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '2ae17b3313a65fa103ccc60e993e7475';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '36');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1c3e067b5df35ce3291f76aaddee1310', 'Codec1OutputInterpFilterMode', '245', 'Selects the codec output interpolation FIR filter.', '', 'Selects the codec output interpolation FIR filter:
0: default interpolation filter
1: short FIR for reduced latency requirements, but not as good stop band rejection
2: narrow FIR to meet G.722 requirements
3: reserved', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '3');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1c3e067b5df35ce3291f76aaddee1310';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '40', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '40', '', '0', '', '', '', '38716db679874df9a925bcc227930c87');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '38716db679874df9a925bcc227930c87';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '37');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3fd245ff22e2f2c72016c23819e28900', 'DigMic1ClockRate', '291', 'Configures the clock rate for the second digital microphone', '', 'The value represents the clock rate in kHz. The supported values and resulting clock rates are:
 500: 500kHz
1000: 1MHz
2000: 2MHz
4000: 4MHz', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '500', '4000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3fd245ff22e2f2c72016c23819e28900';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '41', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '41', '', '2000', '', '', '', 'ce40a3fe1b83b97bc59614c1cc88a24b');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ce40a3fe1b83b97bc59614c1cc88a24b';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '38');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3e7e13b4e7a1d4caf28993e0cf0258ef', 'TimedPlaybackErrorGrow', '422', 'Timed playback setting: error grow speed', '', 'timed playback:Max speed the error can grow.

default value: FRACTIONAL(0.2) = 0x19999999 = 429496729', '', '', '', '', '', '', '', '1', 'int32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3e7e13b4e7a1d4caf28993e0cf0258ef';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '42', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '42', '', '429496729', '', '', '', '5bd9ceb911d7d68171b77dc14dcf8c7b');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '5bd9ceb911d7d68171b77dc14dcf8c7b';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '39');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0880a7732d89f8e6e4959b55a6a4e94b', 'PcmSlotCount', '29', 'Number of slots in a PCM frame for first PCM instance', '', 'This key specifies the number of PCM slots (1-4) that are to be present
between sync pulses on the first digital interface.
If the key PcmMasterClockRate is set, this key is ignored as a
request has been made for a specific master clock frequency.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '4');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0880a7732d89f8e6e4959b55a6a4e94b';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '43', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '43', '', '0', '', '', '', '3fc8c77327938e8ce7b1a007af427910');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '3fc8c77327938e8ce7b1a007af427910';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '40');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'bcd39089cf9f34dcaf66e1a8a15ced32', 'Codec1InputSampleSize', '230', 'Sample size for the second codec input', '', 'The sample size for processing is either 16 or 24 bits.
16: 16 bit
24: 24 bit', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'bcd39089cf9f34dcaf66e1a8a15ced32';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '44', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '44', '', '24', '', '', '', 'c359d584340815c3285248563d736ce6');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'c359d584340815c3285248563d736ce6';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '41');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'd3e33a43ab8157bcd54fd3edac7fb720', 'DigMic3PioConfig', '165', 'PIO configuration for fourth Digital Mic instance', '', '            This key defines how pins for fourth Digital Mic instance (instance 3) are configured.
            The octet string key value contains a value each for the CLK_OUT & DATA_IN signal lines
            in that order. Each signal can be specified to use
                0x00 - 0x5F: PIO number or
            If the signal is not required, it should be set to
                0xFF: Unused
            If multiple digital mic instances share the same clock pin, set the CLK_OUT signal on any one
            of the instances to the required PIO number and set it to Unused on all the other instances.
            All digital mic channels that share a clock in this way must be placed in a sync group. Also,
            digital mic endpoints on the instance that defines CLK_OUT should be connected first for the
            clock to be enabled.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '2', '2');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'd3e33a43ab8157bcd54fd3edac7fb720';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '45', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '45', '', '', '', '', '', '957aefcb5457541f89f4195143a63cc8');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '957aefcb5457541f89f4195143a63cc8';
INSERT INTO default_arrays (def_uid, value) VALUES ('42', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('42', '255');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '42');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e0c0ad24360bc0e58e773b2979f48ae6', 'PcmSampleSize', '166', 'Sample size for the first PCM interface', '', 'This key supports formats up to 24 bit.
0: 13 bits in 16 cycle slot duration,
1: 16 bits in 16 cycle slot duration,
2: 8 bits in 16 cycle slot duration,
3: 8 bits in 8 cycle slot duration,
16: 16 bits in 16 cycle slot duration,
24: 24 bits in 24 cycle slot duration.
If this key is set, it takes precedence over PcmSampleFormat.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e0c0ad24360bc0e58e773b2979f48ae6';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '46', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '096da42a73eceaa3010b0a01212b7d48', 'I2s3MasterClockRate', '147', 'Master clock rate in hertz for fourth I2S instance', '', 'When acting as a master on the fourth digital interface in I2S mode, this key
allows the specification in hertz of the exact clock rate to be generated.

If set to zero, the firmware calculates the clock rate based on the
sync rate and bits per sample.

Note: the name MasterClockRate is historical; this key pertains to the bit
clock frequency, not the frequency of any MCLK signal in the system.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '0', '8000000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '096da42a73eceaa3010b0a01212b7d48';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '47', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '47', '', '0', '', '', '', 'a5c2ac15a4b8fa1abe78971565dbfaf0');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a5c2ac15a4b8fa1abe78971565dbfaf0';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '43');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '505a9abaa6c8d21c21a0f0ad37c00400', 'DigMic0PioConfig', '162', 'PIO configuration for first Digital Mic instance', '', '            This key defines how pins for first Digital Mic instance (instance 0) are configured.
            The octet string key value contains a value each for the CLK_OUT & DATA_IN signal lines
            in that order. Each signal can be specified to use
                0x00 - 0x5F: PIO number or
            If the signal is not required, it should be set to
                0xFF: Unused
            If multiple digital mic instances share the same clock pin, set the CLK_OUT signal on any one
            of the instances to the required PIO number and set it to Unused on all the other instances.
            All digital mic channels that share a clock in this way must be placed in a sync group. Also,
            digital mic endpoints on the instance that defines CLK_OUT should be connected first for the
            clock to be enabled.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '2', '2');
SELECT max(elem_uid) FROM config_elements WHERE hash = '505a9abaa6c8d21c21a0f0ad37c00400';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '48', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '48', '', '', '', '', '', '5e9f7bd4817177e86b7765788c297e29');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '5e9f7bd4817177e86b7765788c297e29';
INSERT INTO default_arrays (def_uid, value) VALUES ('44', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('44', '255');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '44');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a1bee5d8156db9c3a761de13e1014289', 'Pcm3TxTristateEnable', '108', 'Enable Tx tristate for fourth PCM instance', '', '0: drive PCM_OUT continuously.
1: tri-state PCM_OUT immediately after falling edge of PCM_CLK in the
last bit of an active slot, assuming the next slot is not active.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a1bee5d8156db9c3a761de13e1014289';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '49', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '49', '', '0', '', '', '', '7d043ffef6f34d581160f5220adedae1');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7d043ffef6f34d581160f5220adedae1';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '45');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e52682e4dac68f974604bbff4a63b301', 'PcmLongLengthSyncEnable', '25', 'Enable long length sync for first PCM instance', '', 'If PcmShortSyncEnable is not set, this key will configure PCM_SYNC pulse
on first PCM instance to be 16 (long) or 8 (short) PCM_CLK cycles.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e52682e4dac68f974604bbff4a63b301';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '50', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '50', '', '0', '', '', '', '8d9ff3eda5e992b38d3a3b7ea0436681');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '8d9ff3eda5e992b38d3a3b7ea0436681';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '46');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1ef99144c8be0b38b6809bc42dcffdf7', 'Pcm1UseLowJitterMode', '78', 'Force second PCM interface clock to use low jitter mode when running at 8 kHz', '', 'For some very specific PCM configurations, this configures the clock source used to generate CLK and SYNC for second PCM instance.
0: a fixed internal clock is used
1: a more flexible clock generator driven from a higher-frequency internal clock is used

This only takes effect with a sync rate of 8kHz and a bit clock rate of 128/256/512kHz; in other configurations, it is forced to 1.
Various other configuration parameters can also cause it to be forced to 1. Not all non-default PCM features may work if this is set to 0.

Selecting low jitter mode increases power consumption.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1ef99144c8be0b38b6809bc42dcffdf7';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '51', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '51', '', '0', '', '', '', '578c7af3a905c09e46d79b50f3204629');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '578c7af3a905c09e46d79b50f3204629';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '47');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b544d10232db4aea455e023f0ab48daf', 'DigMic2SidetoneSourceB', '315', 'Configures the sidetone source point for the second channel of the third digital microphone', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b544d10232db4aea455e023f0ab48daf';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '52', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '52', '', '0', '', '', '', '1bea2298a2d4e9ddb6b3c679e400d927');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '1bea2298a2d4e9ddb6b3c679e400d927';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '48');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '8942cf4c50ceb4e815d7f2cd9d3d604f', 'DigMic2SidetoneSourceA', '314', 'Configures the sidetone source point for the first channel of the third digital microphone', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '8942cf4c50ceb4e815d7f2cd9d3d604f';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '53', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '53', '', '0', '', '', '', '99b47d84546211bb1132a2f6d148bd68');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '99b47d84546211bb1132a2f6d148bd68';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '49');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'ecbcd152af84e5e2412cfe276586e0a2', 'Pcm2GciModeEnable', '90', 'Enable GCI mode for third PCM instance', '', 'Enable PCM GCI mode.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'ecbcd152af84e5e2412cfe276586e0a2';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '54', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '54', '', '0', '', '', '', 'f3f2d4b0182d6c4a3d7f4916dddcfa1d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f3f2d4b0182d6c4a3d7f4916dddcfa1d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '50');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '52aed4fccbc1a1c1610be94f1514a2f5', 'DigMic1ChanSwap', '290', 'Swap the two channels of the second digital microphone', '', 'If set, the two channels of the second digital microphone are swapped,
i.e. the bit clock is inverted.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '52aed4fccbc1a1c1610be94f1514a2f5';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '55', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '55', '', '0', '', '', '', '472c36d162c6d03d66803c49b4ae58a8');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '472c36d162c6d03d66803c49b4ae58a8';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '51');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '9857841b475efa7822e40212feda17e5', 'PcmSampleRisingEdgeEnable', '26', 'Sample PCM_DATA on rising edge of PCM_CLK for first PCM instance', '', '', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '9857841b475efa7822e40212feda17e5';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '56', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '56', '', '1', '', '', '', 'ac8ac966825b82ded0ca053b84c45840');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ac8ac966825b82ded0ca053b84c45840';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '52');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '584765f63ee374d182273388761a0d82', 'FirmwareBuildNumber', '5', 'Numeric firmware build identifier', '', 'Each published firmware build has a unique numeric identifier and
a unique textual (string) identifier. The number and the string
both uniquely identify the firmware build.

This variable gives the numeric build identifier. The value should
normally be expressed in decimal.

The corresponding textual identifier is available via
FirmwareBuildString.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '584765f63ee374d182273388761a0d82';
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '57', 'mibgetfn_common', 'get', '0');
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '57', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '87c12837dd13c623dd896173e135e392', 'Pcm2LsbFirstEnable', '86', 'Enable LSB first for third PCM instance', '', 'This key controls the order in which samples are transmitted and
received on the third PCM interface. Set this key to send/receive
LSB first.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '87c12837dd13c623dd896173e135e392';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '58', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '58', '', '0', '', '', '', 'fb0ae5fa3c4dfabe3030f28e44997d80');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fb0ae5fa3c4dfabe3030f28e44997d80';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '53');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'ef9dfe368c5745e805e2ba3f755e8b57', 'PreferredROMOwner', '430', 'Select the preferential owner of the audio ROM.', '', 'This key selects which of the audio cpus is the preferential owner of the audio ROM.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'ef9dfe368c5745e805e2ba3f755e8b57';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '59', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '59', '', '0', '', '', '', 'b48fa467ebd91ee260e9ee6edbeb620b');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'b48fa467ebd91ee260e9ee6edbeb620b';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '54');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '304abc33840899e1584168d454b368c3', 'Codec0OutClsDAmpControlMode', '481', 'Enable Codec 0 output Amplifier control mode', '', '            To reduce the pop/clicks while turning on Class D DAC, this
            MIB should be set to true. Setting the MIB key to true may
            result in a small increase in power consumption. This MIB
            is applicable only for Class D closed loop mode.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '304abc33840899e1584168d454b368c3';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '60', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '60', '', '1', '', '', '', 'f0c9aad81dae40bf1cfab1f17a49591c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f0c9aad81dae40bf1cfab1f17a49591c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '55');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '91521fb91994c6c58256531a485e5402', 'Codec0OutAmpQualityMode', '469', 'Configure DAC for best THD using very high output power.', '', '            To obtain the best THD with the very highest audio power output,
            this MIB should be set to TRUE. This need only be set when
            the application run the D-class or AB-Class amplifiers at or
            near full-scale.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '91521fb91994c6c58256531a485e5402';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '61', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '61', '', '0', '', '', '', '444165ae11333b5a41b379a3a29f47c4');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '444165ae11333b5a41b379a3a29f47c4';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '56');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '66bf2ce256420ce063893334a9eb7dae', 'Codec0OutputSidetoneInjectionPointB', '219', 'Configures routing of the sidetone to the second channel of the first codec output', '', 'The valid choices are:
0: Side tone is added after the digital gain.
1: Side tone is added before the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '66bf2ce256420ce063893334a9eb7dae';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '62', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '62', '', '1', '', '', '', '26603d6a2533aec0068106ef42b75023');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '26603d6a2533aec0068106ef42b75023';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '57');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c3f645fbb645cbe1d932823fafb814f1', 'AudioIfsReturnToDefaultOnClose', '47', 'Return audio interfaces to default configuration when closed', '', 'Setting this key will cause the audio interfaces to be returned to the MIB
defaults when all users of an interface have closed the endpoints. For example
the PCM MIB defaults will be applied when all slots have been released. For
Codecs and other endpoints that don''t share a physical interface (like the PCM
bus) then the defaults will be set when the endpoints are released.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c3f645fbb645cbe1d932823fafb814f1';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '63', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '63', '', '1', '', '', '', 'a851d3a580cac4d5fa64dbfc625c0c99');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a851d3a580cac4d5fa64dbfc625c0c99';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '58');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'bfa08394acc5d7d0eed5ea0386f3c3bc', 'I2s1MasterClockRate', '123', 'Master clock rate in hertz for second I2S instance', '', 'When acting as a master on the second digital interface in I2S mode, this key
allows the specification in hertz of the exact clock rate to be generated.

If set to zero, the firmware calculates the clock rate based on the
sync rate and bits per sample.

Note: the name MasterClockRate is historical; this key pertains to the bit
clock frequency, not the frequency of any MCLK signal in the system.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '0', '8000000');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'bfa08394acc5d7d0eed5ea0386f3c3bc';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '64', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '64', '', '0', '', '', '', 'd5a3fec1dd79edc034178c1c0debef17');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd5a3fec1dd79edc034178c1c0debef17';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '59');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0b328dcc2c1b17977ce0190d5afc7c30', 'Codec0OutputSidetoneInjectionPointA', '218', 'Configures routing of the sidetone to the first channel of the first codec output', '', 'The valid choices are:
0: Side tone is added after the digital gain.
1: Side tone is added before the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0b328dcc2c1b17977ce0190d5afc7c30';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '65', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '65', '', '1', '', '', '', '57fb25745573caef96487bad638adbf7');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '57fb25745573caef96487bad638adbf7';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '60');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '7f347a8418752cac69380377367f88d4', 'ChipRevision', '4', 'Chip hardware minor version number', '', 'The numeric identifier for the HydraCore silicon revision (as
returned by the chip''s GBL_CHIP_VERSION hardware register).
Other than being different for each design variant (but not for
alternative packaging options), the particular values returned
do not have any significance to the host, but the combination of
ChipVersion and ChipRevision determine which software builds will
run on the chip.', '', '', '', '', '', '', '', '1', 'uint16', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '7f347a8418752cac69380377367f88d4';
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '66', 'mibgetfn_common', 'get', '0');
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '66', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '46fed0fdc99be196ec35d185cbc2bc06', 'StubInt', '1', 'Dummy integer MIB entry', '', 'A MIB integer entry that can be harmlessly read or written, e.g.,
for testing.', '', '', '', '', '', '', '', '0', 'int32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '46fed0fdc99be196ec35d185cbc2bc06';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '67', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a5c4c0140e87e9ffb6eacb50a38f129e', 'Pcm3PioConfig', '53', 'PIO configuration for fourth PCM/I2S instance', '', '            This key defines which chip pins the fourth PCM or I2S interface (instance 3)
            comes out on. (The same pins are shared by these two interfaces, so they
            cannot be used simultaneously.)
            On some devices the fourth PCM or I2S instance could support multi-lane enhanced
            I2S interface with additional 3 DIN lines. So unlike other PCM or I2S instances,
            the fourth instance octet string key value contains a value each for the PCM
            signal lines CLK, SYNC, MCLK, DOUT & DIN (or, for I2S: SCK, WS, MCLK, SD_OUT,
            & SD_IN) as well as 3 additional DIN lines DIN_B, DIN_C & DIN_D (or, for
            I2S: SD_IN_B, SD_IN_C & SD_IN_D).
            Each signal can be specified to use
                0x00 - 0x5F: PIO number or
                0xFE: Dedicated pin as per chip pinout
            If the signal is not required, it should be set to
                0xFF: Unused
            Note that signals cannot be a combination of PIO and dedicated pins.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '8', '8');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a5c4c0140e87e9ffb6eacb50a38f129e';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '68', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '68', '', '', '', '', '', 'fe53f0b2854b58cb52d92ad8f98df5a5');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fe53f0b2854b58cb52d92ad8f98df5a5';
INSERT INTO default_arrays (def_uid, value) VALUES ('61', '254');
INSERT INTO default_arrays (def_uid, value) VALUES ('61', '254');
INSERT INTO default_arrays (def_uid, value) VALUES ('61', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('61', '254');
INSERT INTO default_arrays (def_uid, value) VALUES ('61', '254');
INSERT INTO default_arrays (def_uid, value) VALUES ('61', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('61', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('61', '255');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '61');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'ca823ede8db67c5e80de370c34455257', 'Codec1OutputSidetoneInjectionPointB', '251', 'Configures routing of the sidetone to the second channel of the second codec output', '', 'The valid choices are:
0: Side tone is added after the digital gain.
1: Side tone is added before the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'ca823ede8db67c5e80de370c34455257';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '69', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '69', '', '1', '', '', '', 'e8b404bb9e13756be1731d15305ea2c4');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e8b404bb9e13756be1731d15305ea2c4';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '62');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1a84ad6888d7578e5a9a609db38e3b2b', 'Spdif2OutPioConfig', '160', 'Output PIO configuration for third SPDIF instance', '', '            This key defines how output pin for third SPDIF instance (instance 2) is configured.
            The signal can be specified to use
                0 - 95: PIO number or
            If the signal is not required, it should be set to
                255: Unused', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '255');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1a84ad6888d7578e5a9a609db38e3b2b';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '70', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '70', '', '255', '', '', '', '2dfaed78365468e91a43376b38d14392');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '2dfaed78365468e91a43376b38d14392';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '63');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'fd0f3f37fa0ed7716c96b485ead70224', 'DigMic0SampleSize', '277', 'Sample size for the first digital microphone', '', 'The sample size for processing is either 16 or 24 bits.
16: 16 bit
24: 24 bit', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'fd0f3f37fa0ed7716c96b485ead70224';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '71', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '71', '', '24', '', '', '', '96d9a2f7ee2bb1a1f8e3c3901df36cb1');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '96d9a2f7ee2bb1a1f8e3c3901df36cb1';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '64');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '333eca4bf70d4f79718dcec1c57f9ead', 'SidetoneGain', '256', 'Global sidetone gain default', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps,
and unity gain for a value of 11. I.e. the range is approximately -33dB to
+12dB.
This key sets the default for all sidetone input devices i.e. codec ADCs and
digital mics. Override it with the following keys in order to configure
different gains for input devices:
Codec0InputSidetoneGainA
Codec0InputSidetoneGainB
Codec1InputSidetoneGainA
Codec2InputSidetoneGainB
DigMic0SidetoneGainA
DigMic0SidetoneGainB
DigMic1SidetoneGainA
DigMic1SidetoneGainB
DigMic2SidetoneGainA
DigMic2SidetoneGainB
DigMic3SidetoneGainA
DigMic3SidetoneGainB', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = '333eca4bf70d4f79718dcec1c57f9ead';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '72', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '72', '', '0', '', '', '', '0ed74f3505499924704da9b6b44884b4');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '0ed74f3505499924704da9b6b44884b4';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '65');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '29b5afa48f37aa9ed20902ffc8f76bb0', 'Pcm3ManchRxOffset', '116', 'Manchester receive offset for fourth PCM instance', '', 'When in Manchester mode, selects the delay between receiving
the start bit and sampling the first significant bit from the
voice sample.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '3');
SELECT max(elem_uid) FROM config_elements WHERE hash = '29b5afa48f37aa9ed20902ffc8f76bb0';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '73', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '73', '', '0', '', '', '', '13795718f57561178eea76f369a8c094');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '13795718f57561178eea76f369a8c094';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '66');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '7248195c4813a60a889d4da58e02140d', 'Codec0OutputInterpFilterMode', '213', 'Selects the codec output interpolation FIR filter.', '', 'Selects the codec output interpolation FIR filter:
0: default interpolation filter
1: short FIR for reduced latency requirements, but not as good stop band rejection
2: narrow FIR to meet G.722 requirements
3: reserved', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '3');
SELECT max(elem_uid) FROM config_elements WHERE hash = '7248195c4813a60a889d4da58e02140d';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '74', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '74', '', '0', '', '', '', '938ad41ac30ff8bb9c361dc8fe5bb167');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '938ad41ac30ff8bb9c361dc8fe5bb167';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '67');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '78edd8bc04e8518691c0cecddc01efab', 'PcmManchRxOffset', '28', 'Manchester mode receive offset for first PCM instance', '', 'When in Manchester mode, selects the delay between receiving
the start bit and sampling the first significant bit from the
voice sample.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '3');
SELECT max(elem_uid) FROM config_elements WHERE hash = '78edd8bc04e8518691c0cecddc01efab';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '75', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '75', '', '0', '', '', '', '57a680322a0a12623de38b506e336b92');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '57a680322a0a12623de38b506e336b92';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '68');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b47b02e34563cb08109567318391b169', 'Codec0OutAmpDCOffset', '470', 'Configures the DC offset. If set, efuse values will be overridden.', '', '            This mib key is used in order to override default efuse settings for
            DC offset.
            Format:
                val1: override_flag. If set to 1 val2 - val5 will override
                       the efuse default settings (On Stre only val2 and val4 are
                       applicable). if set to 2, val6 - val13
                       offsets will be applied at SW level. set to 3, sets
                       both HW and SW.
                val2 : channel A HW MSB offset.
                val3 : channel A HW LSB offset.
                val4 : channel B HW MSB offset.
                val5 : channel B HW LSB offset.
                val6 : channel A SW MSB of MSW offset
                val7 : channel A SW LSB of MSW offset
                val8 : channel A SW MSB of LSW offset
                val9 : channel A SW LSB of LSW offset
                val10: channel B SW MSB of MSW offset
                val11: channel A SW LSB of MSW offset
                val12: channel A SW MSB of LSW offset
                val13: channel A SW LSB of LSW offset', '', '', '', '', '', '', '', '1', 'octet_string', '', '0', '', '', '5', '13');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b47b02e34563cb08109567318391b169';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '76', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '76', '', '', '', '', '', '25627e98f6c3128b2930b5aafb148cde');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '25627e98f6c3128b2930b5aafb148cde';
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('69', '0');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '69');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '36c6602c2d375fb79605946d25458a66', 'I2s2RxStartSample', '145', 'Defines when RX begins for third I2S instance', '', '0: I2S reception begins during low sync clock phase.
1: I2S reception begins during high sync clock phase.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '36c6602c2d375fb79605946d25458a66';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '77', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '77', '', '1', '', '', '', '00feedc307b236f4090c0de375c19e49');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '00feedc307b236f4090c0de375c19e49';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '70');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c9b874a0a14ec02c4402188864cf938a', 'DigMic0Route', '279', 'Configures the signal routing within the first digital microphone', '', 'ADC chain routing:
0: IIR filter followed by Digital gain
1: Digital gain followed by IIR filter', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c9b874a0a14ec02c4402188864cf938a';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '78', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '78', '', '0', '', '', '', '90ad0f58a02d28a4bf15ccff35240eef');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '90ad0f58a02d28a4bf15ccff35240eef';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '71');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'af7fb46f9a77e321628ba67bbb3b7c3d', 'Codec1OutputSidetoneInvertB', '253', 'Inverts the sidetone phase on the second channel of the second codec output', '', '', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'af7fb46f9a77e321628ba67bbb3b7c3d';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '79', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '79', '', '0', '', '', '', '482cea1ae95c1e40b3b76857e2e02f9a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '482cea1ae95c1e40b3b76857e2e02f9a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '72');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '9dc78c9259af7b476710247c319dd31b', 'DigMic2ChanSwap', '306', 'Swap the two channels of the third digital microphone', '', 'If set, the two channels of the third digital microphone are swapped,
i.e. the bit clock is inverted.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '9dc78c9259af7b476710247c319dd31b';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '80', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '80', '', '0', '', '', '', 'c34de9b60a826f92e163fcb49350aea4');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'c34de9b60a826f92e163fcb49350aea4';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '73');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '6f78198d0a1dcf6f94b695766b5011f4', 'DigMic3DataSource', '326', 'Configures the signal routing within the fourth digital microphone', '', 'ADC data source selection from:
0: output of the IIR Filter
1: output of the digital gain stage', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '6f78198d0a1dcf6f94b695766b5011f4';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '81', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '81', '', '1', '', '', '', 'ef995e2b8891bba07f68a05a4c26fe11');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ef995e2b8891bba07f68a05a4c26fe11';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '74');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '69a9b6629fdd644841549a75764f6325', 'Spdif1OutputSampleSize', '407', 'Sample size for the second SPDIF output', '', 'The sample size is either 16 bits or 24 bits.
16: 16 bit
24: 24 bit
This setting applies to both channels.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '69a9b6629fdd644841549a75764f6325';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '82', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '82', '', '24', '', '', '', '91a90510656924e53d9ef25f4a7a6937');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '91a90510656924e53d9ef25f4a7a6937';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '75');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '630ebca174ecd56e3d43c3bed3577f13', 'Pcm3SlotCount', '117', 'Number of slots in a PCM frame for fourth PCM instance', '', 'This key specifies the number of PCM slots (1-4) that are to be present
between sync pulses on the fourth digital interface.
If the key Pcm3MasterClockRate is set, this key is ignored as a
request has been made for a specific master clock frequency.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '4');
SELECT max(elem_uid) FROM config_elements WHERE hash = '630ebca174ecd56e3d43c3bed3577f13';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '83', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '83', '', '0', '', '', '', '06ed442aece8c8dccc8d5c01a7600fbf');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '06ed442aece8c8dccc8d5c01a7600fbf';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '76');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'eddf6fa09274c5e705de9f5d52af005c', 'Codec0InputSampleSize', '198', 'Sample size for the first codec input', '', 'The sample size for processing is either 16 or 24 bits.
16: 16 bit
24: 24 bit', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'eddf6fa09274c5e705de9f5d52af005c';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '84', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '84', '', '24', '', '', '', 'b234fbcc95aac1ff6a1c415cda01492a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'b234fbcc95aac1ff6a1c415cda01492a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '77');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'd74eda38a6a5452b6c5e45b8d1880162', 'AncRampUpTime', '472', 'Gain ramp up delay for ANC enable', '', '                 Time in milliseconds for ramping up the ANC gain after enabling
                 ANC to reduce pops and clicks at the output.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '65535');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'd74eda38a6a5452b6c5e45b8d1880162';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '85', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '85', '', '1000', '', '', '', '9ebaa0115790f522455701be3569b70e');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '9ebaa0115790f522455701be3569b70e';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '78');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '9307b05692700951f8db0a797bd7ba5f', 'I2s3SampleSize', '173', 'Sample size for the fourth I2S interface', '', 'The sample size is either 16 bits or 24 bits.
16: 16 bit
24: 24 bit
This setting applies to both input and output, and to both channels.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '9307b05692700951f8db0a797bd7ba5f';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '86', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '86', '', '16', '', '', '', 'fb718ce2f780d80a518606768c40289a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fb718ce2f780d80a518606768c40289a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '79');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c68c0fd14928fb766e96a8396244b923', 'DigMic0SidetoneSourceB', '283', 'Configures the sidetone source point for the second channel of the first digital microphone', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c68c0fd14928fb766e96a8396244b923';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '87', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '87', '', '0', '', '', '', 'dfda2cabeae5947429fe67617453f59d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'dfda2cabeae5947429fe67617453f59d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '80');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b1e7f5cceb9fba62f0feeee46f368729', 'DigMic1G722FilterEnable', '296', 'Enables optional G722 filter in the second digital microphone', '', 'Enables optional G722 filter in the second digital microphone. Improves noise performance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b1e7f5cceb9fba62f0feeee46f368729';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '88', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '88', '', '0', '', '', '', '941ab1d001c364611707276ed9423e88');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '941ab1d001c364611707276ed9423e88';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '81');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '647c39c0d6b99a88d15c422b66d273df', 'I2s2LftJstfyDly', '138', 'Set delay before sampling when left justified for third I2S instance', '', '0: MSB of sample data occurs in the first bit clock period after sync transition.
1: MSB of sample data occurs in the second bit clock period after sync transition.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '647c39c0d6b99a88d15c422b66d273df';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '89', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '89', '', '1', '', '', '', '7847d7eb6629220a3a7e1a3434abb0e3');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7847d7eb6629220a3a7e1a3434abb0e3';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '82');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '2d09d9f734d45c923db48219cdb5e780', 'PcmMuteEnable', '24', 'Mute PCM_DATA output for first PCM instance', '', 'Force PCM_DATA output on first PCM instance to be muted.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '2d09d9f734d45c923db48219cdb5e780';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '90', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '90', '', '0', '', '', '', '06fa1574a5dd643eeba2ed15297fd79c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '06fa1574a5dd643eeba2ed15297fd79c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '83');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0b195421bc2d93fb72492cd93274f7fb', 'Codec0OutputSampleSize', '212', 'Sample size for the first codec output', '', 'The sample size for processing is either 16 or 24 bits.
16: 16 bit
24: 24 bit', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0b195421bc2d93fb72492cd93274f7fb';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '91', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '91', '', '24', '', '', '', '8539a36c1a9c92570c93782053ce6d17');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '8539a36c1a9c92570c93782053ce6d17';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '84');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a40b8ae1fdc22d543518a692cadc6bfd', 'Pcm3ManchModeEnable', '103', 'Enable Manchester encoding mode for fourth PCM instance', '', 'Setting the key to TRUE enables manchester encoding on the fourth PCM instance.
Manchester encoding is only available if Pcm3UseLowJitterMode is NOT set', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a40b8ae1fdc22d543518a692cadc6bfd';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '92', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '92', '', '0', '', '', '', '66cb79bd18c21da3ee676b70c5128305');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '66cb79bd18c21da3ee676b70c5128305';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '85');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3bf8f7ca4bb70e3f50e75da1cbc60cee', 'Spdif1OutPioConfig', '159', 'Output PIO configuration for second SPDIF instance', '', '            This key defines how output pin for second SPDIF instance (instance 1) is configured.
            The signal can be specified to use
                0 - 95: PIO number or
            If the signal is not required, it should be set to
                255: Unused', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '255');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3bf8f7ca4bb70e3f50e75da1cbc60cee';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '93', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '93', '', '255', '', '', '', 'd6c30ac064156a61e7e6e86b61eda927');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd6c30ac064156a61e7e6e86b61eda927';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '86');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a37f1dc71722bd3ceaaef297918e6fac', 'DigMic1SampleSize', '293', 'Sample size for the second digital microphone', '', 'The sample size for processing is either 16 or 24 bits.
16: 16 bit
24: 24 bit', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a37f1dc71722bd3ceaaef297918e6fac';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '94', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '94', '', '24', '', '', '', '477ef729fcf2c1ea32fd87167304d447');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '477ef729fcf2c1ea32fd87167304d447';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '87');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '19a0d1a8016d36d4fb08124503b6cdd2', 'HeapAllocationSram', '474', 'Sizes of the heaps for the external SRAM', '', '              This key allows partitioning the memory available for the external
              heaps between the processor cores.
              The value is an array of 6 octets, each pair of octets
              represents the size in KB( e.g: 256KB is represented as 01 00).
               octet 0 and 1: Size of external SRAM,
               octet 2 and 3: Data heap size for 0,
               octet 4 and 5: Data heap size for P1,
               octet 6 and 7: reserved,
               octet 8 and 9: reserved,
               octet 10 and 11: reserved,
               octet 12 and 13: reserved,', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '14', '14');
SELECT max(elem_uid) FROM config_elements WHERE hash = '19a0d1a8016d36d4fb08124503b6cdd2';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '95', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '95', '', '', '', '', '', 'f551277f6e53abc092bfff49674fde56');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f551277f6e53abc092bfff49674fde56';
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('88', '0');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '88');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '793aa59f2f5fca80299d1b822fccf4aa', 'Codec0InputTermination', '201', 'Selects the analog inputs for the first codec input', '', 'This is a bitfield. When bit 15 is 0, the values of the lower bits correspond to
the following standard configurations:
0: dual differential (LINEIN1_P:LINEIN1_N, LINEIN2_P:LINEIN2_N)
1: dual single-ended noninverted (LINEIN1_P, LINEIN2_P)
2: dual single-ended inverted (LINEIN1_N, LINEIN2_N)
3: single differential(MICIN1_P, MICIN2_N)
When bit 15=1, the lower bits are a raw register value controlling the input line
selection. Not all the configurations are valid on all devices and instances. See
the device datasheet for details.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '793aa59f2f5fca80299d1b822fccf4aa';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '96', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '96', '', '0', '', '', '', 'e1606c0ad25418c07e7c492f30ce272c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e1606c0ad25418c07e7c492f30ce272c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '89');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '52a3e7f100c2d4b3dde8c405416bf6d0', 'Pcm2SignExtendEnable', '85', 'Enable sign extend for third PCM instance', '', 'Enable sign extension of 13/8-bit samples to 16-bit samples on the third
PCM interface.

If the key is not set, the samples are padded to 16-bits by inserting
extra LSBs. For 13-bit samples, the 3-bit padding can be selected by
setting Pcm2AudioGain accordingly. 8-bit samples are padded with zeros.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '52a3e7f100c2d4b3dde8c405416bf6d0';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '97', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '97', '', '0', '', '', '', 'b37d99023c2cb4fea7c5676665dfb88c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'b37d99023c2cb4fea7c5676665dfb88c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '90');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '9181ec45ab22ffa2717f58b3c026847b', 'PcmShortSyncEnable', '16', 'Enable short synchronisation for first PCM instance', '', 'Setting this key enables Short frame sync (sync pulse width of 1 bit clock cycle,
falling edge indicates start of frame) on the first PCM instance.

If long frame sync is selected the frame starts at rising edge of the sync pulse and
Sync pulse width depends on PcmLongLengthSyncEnable configuration', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '9181ec45ab22ffa2717f58b3c026847b';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '98', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '98', '', '0', '', '', '', '656211e2d5becae9e2280ab40a96657e');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '656211e2d5becae9e2280ab40a96657e';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '91');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'ec1c53603a0be13b9ba79a4869dcf668', 'Codec0InputSidetoneGainB', '205', 'Configures the sidetone gain for the second channel of the first codec input', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'ec1c53603a0be13b9ba79a4869dcf668';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '99', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '29a02add3372db1a2a7035e59576c9fd', 'EnablePxTimer', '417', 'Flag for enabling/disabling Px start/stop timer.', '', 'A timer is run to determine whether starting/stopping Px is successful or not. This flag disables it for debugging purposes.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '29a02add3372db1a2a7035e59576c9fd';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '100', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '100', '', '1', '', '', '', '4b9a56f678a2b348e1af6f64ca3cfcb3');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '4b9a56f678a2b348e1af6f64ca3cfcb3';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '92');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '9f93277e850990cceb4fdda985b49994', 'DigMic2DataSource', '310', 'Configures the signal routing within the third digital microphone', '', 'ADC data source selection from:
0: output of the IIR Filter
1: output of the digital gain stage', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '9f93277e850990cceb4fdda985b49994';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '101', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '101', '', '1', '', '', '', '1a439ec8030c4944644c074fffd56b7e');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '1a439ec8030c4944644c074fffd56b7e';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '93');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'fa92b65c40d25ebf3e448328bb548201', 'Codec1RawInputGain', '225', 'Low level gain control for the second codec input', '', 'The value for this key consists of bit fields for registers which
control the codec input gain. Refer to the device datasheet for details
of this setting.
When a valid value for this key is defined, the value of Codec1InputGain is ignored.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'fa92b65c40d25ebf3e448328bb548201';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '102', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b87546e34c8aee76335dd3bb090a3cca', 'Codec1OutputIndividualSidetoneEnableA', '246', 'Enables adding sidetone to the first channel of the second codec output', '', 'Source channels also have to be selected using Codec0OutputSourceMaskA.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b87546e34c8aee76335dd3bb090a3cca';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '103', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '103', '', '0', '', '', '', '504079b7abe02e157f9ee55d9a8e82c8');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '504079b7abe02e157f9ee55d9a8e82c8';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '94');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'f7091ef0ddc526b367304e9785a8d57f', 'FirmwareBuildString', '6', 'Textual firmware build identifier', '', 'Each published firmware build has a unique numeric identifier and
a unique textual (string) identifier. The number and the string
both uniquely identify the firmware build.

This variable gives the textual build identifier. The value is an
ASCII string.

The corresponding numeric identifier is available via
FirmwareBuildNumber.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '0', '128');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'f7091ef0ddc526b367304e9785a8d57f';
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '104', 'mibgetfn_common', 'get', '0');
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '104', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a65f3b4e1a12cbc74d9f64343e0079be', 'I2sBitsPerSample', '41', 'Bits per sample for first I2S instance', '', 'This key specifies the number of bit clocks reserved for each (mono)
sample on the first I2S interface. Valid settings are 16, 20, or
24 bits per sample.

This key does not specify how many of those bits are used for internal
data processing; see I2sSampleSize for that. If this key is set to
a value larger than I2sSampleSize, the additional bits are output as
zeroes in the least significant bits. On the input, if sample size
is 16 bits and bits-per-sample is greater, an attenuation can be
applied, or samples larger than 16bit can be cropped to 16bits.

This key is also used to calculate the bit clock rate when in
master mode and the I2sMasterClockRate key is not set.
(I2sMasterClockRate takes precedence over this key for the
purposes of supplying the master clock rate.) The calculation is
bits per sample * 2 (channels) * sample rate.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a65f3b4e1a12cbc74d9f64343e0079be';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '105', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '105', '', '16', '', '', '', '395b15bfa1ff9944fe3f2fa7834db452');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '395b15bfa1ff9944fe3f2fa7834db452';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '95');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'eb2452bb48be9d115587b9a6e2eb0981', 'TimedPlaybackWarpScale', '424', 'Timed playback setting: warp scaling', '', 'timed playback:Scaling factor for warp value.

default value: 32', '', '', '', '', '', '', '', '1', 'int32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'eb2452bb48be9d115587b9a6e2eb0981';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '106', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '106', '', '32', '', '', '', '4ea84320c55fc714ce0ebf2ca8a798f6');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '4ea84320c55fc714ce0ebf2ca8a798f6';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '96');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'ecd2f0130a82987b35c21ba5d1ed11e1', 'I2s1TxStartSample', '132', 'Defines when TX begins for second I2S instance', '', '0: I2S transmission begins during low sync clock phase.
1: I2S transmission begins during high sync clock phase.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'ecd2f0130a82987b35c21ba5d1ed11e1';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '107', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '107', '', '0', '', '', '', '7302d8826652c6c59c8f80749b1af136');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7302d8826652c6c59c8f80749b1af136';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '97');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e6ae670c400acf7cb4ef2dc031dc0081', 'I2sCropEnable', '42', 'Takes first 16bits after sync edge as sample for first I2S instance', '', 'In this mode the most significant bits after sync are taken to be the sample data.
If I2sBitsPerSample is configured for 24/32 bits per sample, but I2sSampleSize is
configured for 16 bits per sample only, then crop enable decides whether the I2S
interface rounds or truncates incoming 24/32 bits to 16 bits.

Additionally, it must be enabled if in 16 bit per sample mode when CLK rate = 32*sample rate.

0: Disable Cropping(or select rounding)
1: Enable Cropping

From CSRA681xx, the crop mode is selected automatically, and there is no need to
set this key; it should be left at its default value.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e6ae670c400acf7cb4ef2dc031dc0081';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '108', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '108', '', '1', '', '', '', 'c882f5167e4cec63132786981409feb4');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'c882f5167e4cec63132786981409feb4';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '98');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '63b55a96df35cb3358e401de72e8e32a', 'AudioThreadOffload', '475', 'Enable thread offload', '', ' Enable thread offload', '             Configuring this key to ''true'', when dual core support is not
             enabled (CoreEnable = [00]), enables certain capabilities
             to offload work onto the second core ("thread offload").', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '63b55a96df35cb3358e401de72e8e32a';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '109', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '109', '', '0', '', '', '', '7c7c02d6641b0ae557cce4480aab8e20');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7c7c02d6641b0ae557cce4480aab8e20';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '99');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '6089bc3c1b2127d960881e4738cf5909', 'PanicOnFaultCode', '8', 'Halt the system on a specific fault', '', 'The description of PanicOnFault presumes the value of
PanicOnFaultCode is zero (the equivalent of "fault_none" within
the firmware).

If PanicOnFaultCode is non-zero (i.e., if it is set to a valid
faultid), then a call to fault() leads directly to a call to panic()
only when fault() is called with the specified fault code. In other words,
this key causes a PanicOnFault to occur when a specific fault occurs.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '6089bc3c1b2127d960881e4738cf5909';
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '110', 'mibgetfn_common', 'get', '0');
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '110', 'mibsetfn_common', 'set', '0');
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '110', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '110', '', '0', '', '', '', '10363987d6720874f7fd5a1b95c7b66c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '10363987d6720874f7fd5a1b95c7b66c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '100');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'd5729af458eb539d646d3025ec23faf1', 'DigMic0AmpSel', '276', 'Configures the input levels for the first digital microphone', '', 'Valid choices are: 0x0700, 0x0601, 0x0502, 0x0403.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '1027', '1792');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'd5729af458eb539d646d3025ec23faf1';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '111', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '111', '', '1792', '', '', '', 'ee0b26e3153334e8f4aced583ff78abf');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ee0b26e3153334e8f4aced583ff78abf';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '101');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e4df2a64900426e631e0708fe8523033', 'PcmMasterClockRate', '13', 'First PCM interface override for clock rate', '', 'When acting as a master on the first digital interface in PCM mode, this key
allows the specification in hertz of the exact clock rate to be generated.

If set to zero, the firmware calculates the clock rate based
on the sync rate, bits per sample and slots per frame.

Note: the name MasterClockRate is historical; this key pertains to the bit
clock frequency, not the frequency of any MCLK signal in the system.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '0', '8000000');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e4df2a64900426e631e0708fe8523033';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '112', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '112', '', '1024000', '', '', '', '66c5449a63bfb9c82c1163beaf5c14bc');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '66c5449a63bfb9c82c1163beaf5c14bc';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '102');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'dfca1e13fc1e00388a8b67e647da2516', 'Pcm2TxTristateEnable', '87', 'Enable Tx tristate for third PCM instance', '', '0: drive PCM_OUT continuously.
1: tri-state PCM_OUT immediately after falling edge of PCM_CLK in the
last bit of an active slot, assuming the next slot is not active.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'dfca1e13fc1e00388a8b67e647da2516';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '113', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '113', '', '0', '', '', '', '212d2bc5bfc29f2ad8971b92af1bfc86');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '212d2bc5bfc29f2ad8971b92af1bfc86';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '103');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '45dd51de428d4a3564a4c49a7b1873dc', 'AudioEndpointKickPeriod', '433', 'Audio endpoint default kick period, in microseconds', '', 'This key changes the default time period for running audio processing.
Larger values typically result in lower overall MIPS (and hence power)
but will use more data RAM.
This setting does not apply to HFP graphs using the AEC reference operator,
or to any other overridden endpoints.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '1000', '20000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '45dd51de428d4a3564a4c49a7b1873dc';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '114', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '114', '', '2000', '', '', '', '6b384958d2bbe56cf18b2a1427bf90e6');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '6b384958d2bbe56cf18b2a1427bf90e6';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '104');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '2ad42f5f3deec989af35c63749841ffa', 'I2s3MasterMode', '148', 'Enable master mode on fourth I2S instance', '', 'Setting the key to TRUE configures the hardware to generate the clock and
sync signals on the fourth I2S instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '2ad42f5f3deec989af35c63749841ffa';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '115', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '115', '', '0', '', '', '', 'de0f854a2e7fac6b1543715440315854');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'de0f854a2e7fac6b1543715440315854';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '105');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '32408223ebe8fed86baf62e8e94b79a0', 'Spdif0OutputSampleSize', '403', 'Sample size for the first SPDIF output', '', 'The sample size is either 16 bits or 24 bits.
16: 16 bit
24: 24 bit
This setting applies to both channels.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '32408223ebe8fed86baf62e8e94b79a0';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '116', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '116', '', '24', '', '', '', 'ab328cbfe887b7b5a0b64416cd80cd9a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ab328cbfe887b7b5a0b64416cd80cd9a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '106');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '6d40c2e7069acc44574fb3fb17737464', 'USBSourceBufferSize', '426', 'Configures the USB source endpoint output buffer size (in words)', '', 'The output buffer of USB source endpoint needs to be large enough to not fill up during the
longest period the connected operator may be blocked. The worst case for this
is the sum of the run times for all the other operators in the system.
The required buffering is then duration (s) * sample rate (Hz) * channels.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '4800');
SELECT max(elem_uid) FROM config_elements WHERE hash = '6d40c2e7069acc44574fb3fb17737464';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '117', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '117', '', '576', '', '', '', 'e3c737cab0f073dc764084c6da8f9450');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e3c737cab0f073dc764084c6da8f9450';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '107');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '23b091cf55c17a81f8ffdb50a8fd2d71', 'DigMic0ClockRate', '275', 'Configures the clock rate for the first digital microphone', '', 'The value represents the clock rate in kHz. The supported values and resulting clock rates are:
 500: 500kHz
1000: 1MHz
2000: 2MHz
4000: 4MHz', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '500', '4000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '23b091cf55c17a81f8ffdb50a8fd2d71';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '118', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '118', '', '2000', '', '', '', 'f5fdf391f75d34db25ea7fdee3146566');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f5fdf391f75d34db25ea7fdee3146566';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '108');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'd4be1fd299bf688ee0777de2427ec453', 'DigMic2ClockRate', '307', 'Configures the clock rate for the third digital microphone', '', 'The value represents the clock rate in kHz. The supported values and resulting clock rates are:
 500: 500kHz
1000: 1MHz
2000: 2MHz
4000: 4MHz', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '500', '4000');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'd4be1fd299bf688ee0777de2427ec453';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '119', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '119', '', '2000', '', '', '', '5106dff67f57ae0e5f26808a01f886b1');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '5106dff67f57ae0e5f26808a01f886b1';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '109');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'fc675e08066a19b902af92ce57d0ab15', 'Codec1OutputSidetoneInvertA', '252', 'Inverts the sidetone phase on the first channel of the second codec output', '', '', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'fc675e08066a19b902af92ce57d0ab15';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '120', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '120', '', '0', '', '', '', 'a82fb4691365ece1b455b4cdd830fbcf');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a82fb4691365ece1b455b4cdd830fbcf';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '110');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '5e698ec47447aa2fb55fabaf19753355', 'Pcm1ShortSyncEnable', '62', 'Enable short synchronisation for second PCM instance', '', 'Setting this key enables Short frame sync (sync pulse width of 1 bit clock cycle,
falling edge indicates start of frame) on the second PCM instance.

If long frame sync is selected the frame starts at rising edge of the sync pulse and
Sync pulse width depends on Pcm1LongLengthSyncEnable configuration', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '5e698ec47447aa2fb55fabaf19753355';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '121', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '121', '', '0', '', '', '', '099147c0702d57e1265a9f6005f3a5a8');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '099147c0702d57e1265a9f6005f3a5a8';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '111');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0ccbb6f59346b312cb35cc3329fb44d7', 'DigMic3SidetoneSourceA', '330', 'Configures the sidetone source point for the first channel of the fourth digital microphone', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0ccbb6f59346b312cb35cc3329fb44d7';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '122', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '122', '', '0', '', '', '', '1b1e34dcb54a28b07749736286cffc05');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '1b1e34dcb54a28b07749736286cffc05';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '112');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c7b861da5ae7f0ca367815a70475d623', 'I2s2ChnlPlrty', '139', 'I2S channel polarity for third I2S instance', '', '0: Sample data is left channel when sync clock line is high
1: Sample data is right channel when sync clock line is high', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c7b861da5ae7f0ca367815a70475d623';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '123', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '123', '', '1', '', '', '', '13cba6231f169d2ba27a3b0a2698d24e');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '13cba6231f169d2ba27a3b0a2698d24e';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '113');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b50724eacc69e66ef2f7bf4357a988f4', 'Codec0OutputSidetoneInvertA', '220', 'Inverts the sidetone phase on the first channel of the first codec output', '', '', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b50724eacc69e66ef2f7bf4357a988f4';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '124', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '124', '', '0', '', '', '', '904067f8b2641d1247362f7992c499eb');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '904067f8b2641d1247362f7992c499eb';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '114');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'efce7ccc7b8e684a0f3e40a2c7de2797', 'I2sJstfyFormat', '36', 'Set sample justification for first I2S instance', '', '0: left justified, 1: right justified.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'efce7ccc7b8e684a0f3e40a2c7de2797';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '125', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '125', '', '0', '', '', '', 'fce0326933a4700207f3661ce4ce524c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fce0326933a4700207f3661ce4ce524c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '115');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '7837c8391e3fe47a61a85c351d21cb32', 'Spdif0InPioConfig', '54', 'Input PIO configuration for first SPDIF instance', '', '            This key defines how input pin for first SPDIF instance (instance 0) is configured.
            The signal can be specified to use
                0 - 95: PIO number or
            If the signal is not required, it should be set to
                255: Unused', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '255');
SELECT max(elem_uid) FROM config_elements WHERE hash = '7837c8391e3fe47a61a85c351d21cb32';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '126', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '126', '', '255', '', '', '', 'f1533e7a1b89d02e509f1d9d0a5d0a42');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f1533e7a1b89d02e509f1d9d0a5d0a42';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '116');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '956aa38f36577b3cca53d8e914a3bd68', 'I2sAudioAtten', '40', 'Attenuation in 6 dB steps for first I2S instance', '', '', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = '956aa38f36577b3cca53d8e914a3bd68';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '127', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '127', '', '0', '', '', '', 'fa4e7da6131be3e96fbd5ad7c14bd9ee');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fa4e7da6131be3e96fbd5ad7c14bd9ee';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '117');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '425aea3470fc77ceaf37c2e598fa1797', 'DigMic0InputGain', '273', 'Input gain for the first digital microphone', '', 'This is a bitfield value. If bit 15 is cleared, the lower 4 bits contain
a gain in 2''s complement format, zero representing unity gain, and roughly 3dB steps.
I.e. the approximate gains for each value between 0x0000 and 0x000F are:
0x0007: 21dB
0x0006: 18dB
0x0005: 15dB
0x0004: 12dB
0x0003: 9dB
0x0002: 6dB
0x0001: 3dB
0x0000: 0dB
0x000F: -3dB
0x000E: -6dB
0x000D: -9dB
0x000C: -12dB
0x000B: -15dB
0x000A: -18dB
0x0009: -21dB
0x0008: -24dB

If bit 15 is set, the lower 9 bits represent a linear gain scale in steps of 1/32,
i.e. from 0x8000 = mute, 0x8001 = approx. -30dB, to 0x81FF = approx. 24dB.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '65535');
SELECT max(elem_uid) FROM config_elements WHERE hash = '425aea3470fc77ceaf37c2e598fa1797';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '128', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '128', '', '0', '', '', '', '7cd54941f37ab257efb02af2c63d15d8');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7cd54941f37ab257efb02af2c63d15d8';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '118');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '87410b74f2b95e0b47d478efc3476a6d', 'DigMic1SidetoneSourceA', '298', 'Configures the sidetone source point for the first channel of the second digital microphone', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '87410b74f2b95e0b47d478efc3476a6d';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '129', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '129', '', '0', '', '', '', '9c7924715463ac65c675ca97a45fd4a6');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '9c7924715463ac65c675ca97a45fd4a6';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '119');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b589863da6a150ec62eed643824f10de', 'DigMic3InputGain', '321', 'Input gain for the fourth digital microphone', '', 'This is a bitfield value. If bit 15 is cleared, the lower 4 bits contain
a gain in 2''s complement format, zero representing unity gain, and roughly 3dB steps.
I.e. the approximate gains for each value between 0x0000 and 0x000F are:
0x0007: 21dB
0x0006: 18dB
0x0005: 15dB
0x0004: 12dB
0x0003: 9dB
0x0002: 6dB
0x0001: 3dB
0x0000: 0dB
0x000F: -3dB
0x000E: -6dB
0x000D: -9dB
0x000C: -12dB
0x000B: -15dB
0x000A: -18dB
0x0009: -21dB
0x0008: -24dB

If bit 15 is set, the lower 9 bits represent a linear gain scale in steps of 1/32,
i.e. from 0x8000 = mute, 0x8001 = approx. -30dB, to 0x81FF = approx. 24dB.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '65535');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b589863da6a150ec62eed643824f10de';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '130', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '130', '', '0', '', '', '', 'c83042d96f53b26acfa38565e5b95f5f');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'c83042d96f53b26acfa38565e5b95f5f';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '120');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3df63e22a2207935e5d7e18c3d248ff9', 'DigMic1InputRate', '288', 'Sample rate in Hz for the second digital microphone', '', 'This key specifies the sample rate in hertz for the second digital microphone.
Valid choices are: 8000, 11025, 12000, 16000, 22050, 24000, 32000, 40000, 44100,
48000 and 96000.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '96000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3df63e22a2207935e5d7e18c3d248ff9';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '131', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '131', '', '8000', '', '', '', '0480e312a4fb2df91b932019bdb4cebd');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '0480e312a4fb2df91b932019bdb4cebd';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '121');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '2489d85e857aa904efae519ac0abe543', 'DigiMic0WarmUpDuration', '464', 'Add duration in milliseconds for taking care of digital mic warm up time', '', 'This key can be used to set a duration in milliseconds until then digital mic instance_0 data will be forcefully muted.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '100');
SELECT max(elem_uid) FROM config_elements WHERE hash = '2489d85e857aa904efae519ac0abe543';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '132', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '132', '', '10', '', '', '', '76dd928576c0f641c7adc10cef436ffd');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '76dd928576c0f641c7adc10cef436ffd';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '122');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '04c12a0dcd559851366783cfa7834183', 'Spdif1InputSampleSize', '404', 'Sample size for the second SPDIF input', '', 'The sample size is either 16 bits or 24 bits.
16: 16 bit
24: 24 bit
This setting applies to both channels.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '04c12a0dcd559851366783cfa7834183';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '133', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '133', '', '24', '', '', '', 'e40d39cc26fd347ce91f0201cfca787b');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e40d39cc26fd347ce91f0201cfca787b';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '123');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '5200e9b1ed3965a63e1d3a83b60b7bae', 'Pcm1MuteEnable', '70', 'Mute PCM_DATA output for second PCM instance', '', 'Force PCM_DATA output on second PCM instance to be muted.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '5200e9b1ed3965a63e1d3a83b60b7bae';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '134', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '134', '', '0', '', '', '', '5cfe019e942ae05786c1e578cf29fcb0');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '5cfe019e942ae05786c1e578cf29fcb0';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '124');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c81afb00e80f3b9dfcca7cc6a52a4b2c', 'DigiMic3WarmUpDuration', '467', 'Add duration in milliseconds for taking care of digital mic warm up time', '', 'This key can be used to set a duration in milliseconds until then digital mic instance_3 data will be forcefully muted.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '100');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c81afb00e80f3b9dfcca7cc6a52a4b2c';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '135', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '135', '', '10', '', '', '', '1d57a23ff927e3f0c1ebc702b333172b');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '1d57a23ff927e3f0c1ebc702b333172b';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '125');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0dd34e4dea51c9c7f8dcde5f9e10cfff', 'ProvokePanic', '1053', 'Provoke the subsystem to panic with the given code', '', '              Set with an argument that is used as a panic code.
              Immediately on receipt of a MIB set request, the subsystem
              will panic with the given code. No MIB set response is generated.
              The attribute may not be read.', '', '', '', '', '', '', '', '1', 'uint16', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0dd34e4dea51c9c7f8dcde5f9e10cfff';
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '136', 'mibgetfn_common', 'get', '0');
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '136', 'mibsetfn_common', 'set', '0');
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '136', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1fa3e754341a2f61774c08c235b80444', 'Codec1OutputSidetoneSourceMaskA', '248', 'Enables sidetone source channels for output on the first channel of the second codec output', '', 'This is a bitmask of 8 bits, one for each source channel. A maximum of two bits can be set at the same time.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '192');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1fa3e754341a2f61774c08c235b80444';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '137', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '137', '', '0', '', '', '', '16872201e6f5037b02f5a7aef9ed4334');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '16872201e6f5037b02f5a7aef9ed4334';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '126');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '7e1387930252151cfe0aea6b56ed702a', 'Pcm1SyncRate', '76', 'The PCM_SYNC rate for second PCM instance', '', 'This key specifies the sync rate in hertz for the second digital
interface when operating as a master in PCM mode.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '96000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '7e1387930252151cfe0aea6b56ed702a';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '138', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '138', '', '8000', '', '', '', 'fb72953eb6f12c17e71b84821e920cd9');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fb72953eb6f12c17e71b84821e920cd9';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '127');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '920c1701ad58e67ce830406d4bb6fc8e', 'I2sAudioAttenEnable', '39', 'Enable attenuation on input data for first I2S instance', '', 'Enables/disables the attenuation applied to incoming (into device) audio samples in case the I2sBitsPerSample
is set to 20 or 24 bits per sample on the first I2S instance.

false: 17 bit sample data is rounded down to 16 bits.
true : the audio attenuation defined in the MIB key I2sAudioAtten is applied over 24 bits with saturated rounding.

Requires I2sCropEnable to be 0.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '920c1701ad58e67ce830406d4bb6fc8e';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '139', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '139', '', '0', '', '', '', 'd56642955cb7a951b5c3beaf69a8dccd');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd56642955cb7a951b5c3beaf69a8dccd';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '128');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0e608a103f5c5f485e2e8aa2bce9d8f2', 'I2s3TxStartSample', '156', 'Defines when TX begins for fourth I2S instance', '', '0: I2S transmission begins during low sync clock phase.
1: I2S transmission begins during high sync clock phase.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0e608a103f5c5f485e2e8aa2bce9d8f2';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '140', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '140', '', '0', '', '', '', 'ea4f1cfa857b5f25d6c38618b1218c40');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ea4f1cfa857b5f25d6c38618b1218c40';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '129');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '36add88cf18ba1e4ff7e83a2e0390640', 'AncRampDownTime', '473', 'Gain ramp down delay for ANC disable', '', '                Time in milliseconds for ramping down the ANC gain before
                disabling ANC to reduce pops and clicks at the output.', '', '', '', '', '', '', '', '1', 'uint16', '', '0', '', '', '0', '65535');
SELECT max(elem_uid) FROM config_elements WHERE hash = '36add88cf18ba1e4ff7e83a2e0390640';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '141', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '141', '', '1000', '', '', '', 'a908f86c6cd164dc29424af546b43191');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a908f86c6cd164dc29424af546b43191';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '130');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '5c1220a9e31d165d25e591bcf32aaa89', 'CodecSidetoneEnable', '257', 'Global sidetone output enable for both codec instances', '', 'This flag enables sidetone overall for both codec instances.
In addition to this flag, the individual sidetone enable
and sidetone source mask for each codec output channel
have to be set to enable sidetone.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '5c1220a9e31d165d25e591bcf32aaa89';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '142', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '142', '', '0', '', '', '', 'c652a728b3c428fa4dae9972052eef58');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'c652a728b3c428fa4dae9972052eef58';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '131');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'ffb0f0ee11090a685760b17ff5fc066e', 'Codec1InputG722FirEnable', '232', 'Enables optional G722 FIR filter in the second codec input', '', 'Enable optional FIR filter in the G722 filter to droop the response slightly.
This only has an effect if Codec1InputG722FilterEnable is also set.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'ffb0f0ee11090a685760b17ff5fc066e';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '143', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '143', '', '0', '', '', '', '07f0631b2114eabcd7299bbcb36d92d5');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '07f0631b2114eabcd7299bbcb36d92d5';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '132');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '269ddc662e188886cf3ca15f27f3746d', 'Codec0InputDataSource', '196', 'Configures the signal routing within the first codec input', '', 'ADC data source selection from:
0: output of the IIR Filter
1: output of the digital gain stage', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '269ddc662e188886cf3ca15f27f3746d';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '144', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '144', '', '1', '', '', '', 'fe751669ac22960c62bbb857198a8bed');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fe751669ac22960c62bbb857198a8bed';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '133');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e43ec763cd363ac83ed9e0229e7739c8', 'DigMic1Route', '295', 'Configures the signal routing within the second digital microphone', '', 'ADC chain routing:
0: IIR filter followed by Digital gain
1: Digital gain followed by IIR filter', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e43ec763cd363ac83ed9e0229e7739c8';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '145', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '145', '', '0', '', '', '', '802a4f2cbe0c1afc0a91c6ea8442f325');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '802a4f2cbe0c1afc0a91c6ea8442f325';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '134');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '013039d1a6abbc7131997dd93eb79037', 'DigMic3AmpSel', '324', 'Configures the input levels for the fourth digital microphone', '', 'Valid choices are: 0x0700, 0x0601, 0x0502, 0x0403.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '1027', '1792');
SELECT max(elem_uid) FROM config_elements WHERE hash = '013039d1a6abbc7131997dd93eb79037';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '146', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '146', '', '1792', '', '', '', '8c9eb5a4fb949c38aaf8749175f52b12');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '8c9eb5a4fb949c38aaf8749175f52b12';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '135');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e5059ac11c08d3e7034f80b7da765943', 'Codec1OutputGainBoostEnable', '243', 'Enables a 3dB gain boost for the second codec output', '', 'Enables a 3dB gain boost for the second codec output', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e5059ac11c08d3e7034f80b7da765943';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '147', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '147', '', '0', '', '', '', 'd28dd0164375fabeb92e2fd31141b37c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd28dd0164375fabeb92e2fd31141b37c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '136');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0e787bf4bd139d5298a743b7ca2a1f52', 'Pcm1ManchSlaveModeEnable', '63', 'Enable Manchester slave mode for second PCM instance', '', 'Setting this key forces transmit frames to follow receive frames with
constant delay on the second PCM instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0e787bf4bd139d5298a743b7ca2a1f52';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '148', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '148', '', '0', '', '', '', '4f1e3efdf78b4ce0f388da0bf7bf8e50');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '4f1e3efdf78b4ce0f388da0bf7bf8e50';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '137');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3c72fee9579b147fb75c08e6477ba678', 'Pcm2ManchModeEnable', '82', 'Enable Manchester encoding mode for third PCM instance', '', 'Setting the key to TRUE enables manchester encoding on the third PCM instance.
Manchester encoding is only available if Pcm2UseLowJitterMode is NOT set', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3c72fee9579b147fb75c08e6477ba678';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '149', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '149', '', '0', '', '', '', '58ab875c5a9c6cdb85d1907853c6c7b8');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '58ab875c5a9c6cdb85d1907853c6c7b8';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '138');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c678c3f86a28aaa2c53106e042330331', 'CoreEnable', '58', 'List of processor instances to be enabled', '', '             This key lists the processor instance numbers other than processor 0 to be activated. By default all supported processors are active. For dual-core, only processor 1 is listed here.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '1', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c678c3f86a28aaa2c53106e042330331';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '150', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '150', '', '', '', '', '', '5d2020e3b294c4e620c8afb86344c3e4');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '5d2020e3b294c4e620c8afb86344c3e4';
INSERT INTO default_arrays (def_uid, value) VALUES ('139', '1');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '139');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e3252ff5d2c5d4e80793881f1f77bb21', 'DigMic3Route', '327', 'Configures the signal routing within the fourth digital microphone', '', 'ADC chain routing:
0: IIR filter followed by Digital gain
1: Digital gain followed by IIR filter', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e3252ff5d2c5d4e80793881f1f77bb21';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '151', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '151', '', '0', '', '', '', 'b1f20905d16d2a8dd175c839d563e9d3');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'b1f20905d16d2a8dd175c839d563e9d3';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '140');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '6299a6d0724d821edff46a01ea8c6dcd', 'Pcm1ManchModeEnable', '61', 'Enable Manchester encoding mode for second PCM instance', '', 'Setting the key to TRUE enables manchester encoding on the second PCM instance.
Manchester encoding is only available if Pcm1UseLowJitterMode is NOT set', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '6299a6d0724d821edff46a01ea8c6dcd';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '152', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '152', '', '0', '', '', '', '6ea30ac42866b4d54ec4be8c0acab938');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '6ea30ac42866b4d54ec4be8c0acab938';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '141');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b0d3966e10f58153cc1e81388052ca20', 'DigMic2SampleSize', '309', 'Sample size for the third digital microphone', '', 'The sample size for processing is either 16 or 24 bits.
16: 16 bit
24: 24 bit', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b0d3966e10f58153cc1e81388052ca20';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '153', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '153', '', '24', '', '', '', 'd84e6495487372f005f98235aa42980a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd84e6495487372f005f98235aa42980a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '142');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '95e926368e330d54ae09e8769ea7d22d', 'Pcm3SyncRate', '118', 'The PCM_SYNC rate for fourth PCM instance', '', 'This key specifies the sync rate in hertz for the fourth digital
interface when operating as a master in PCM mode.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '48000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '95e926368e330d54ae09e8769ea7d22d';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '154', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '154', '', '8000', '', '', '', 'f6f88b00c782ed88b9d069b2e64e278b');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f6f88b00c782ed88b9d069b2e64e278b';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '143');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '954bd8f9625fc399a9a1b560f8d6b400', 'Pcm1TxTristateRisingEdgeEnable', '67', 'Enable Tx tristate rising edge for second PCM instance', '', 'This key is only effective if Pcm1TxTristateEnable is set
0: tri-state PCM_OUT immediately after falling edge of PCM_CLK in
last bit of an active slot, assuming the next slot is also not active.
1: tri-state PCM_OUT after rising edge of PCM_CLK after the last data
bit of an active slot.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '954bd8f9625fc399a9a1b560f8d6b400';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '155', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '155', '', '0', '', '', '', '42a1dc36f1b715fdd0407036d8c92798');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '42a1dc36f1b715fdd0407036d8c92798';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '144');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0023bb8a864e00944cf1ffdbe97e84c0', 'AoVDutyCycleParameters', '440', 'Duty cycle configuration when running AoV in low power mode', '', '            This key defines the parameters for calculating the duty cycle when running
            Always on Voice with Wake on Voice in low power mode. The octet string key
            value contains a value each for the total time (period) of the pulse width
            (specified in 10s of milliseconds) and duty cycle in percentage.
            Default is 30ms duty cycle every 100ms. Set both values to zero to turn OFF
            duty cycle mode.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '2', '2');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0023bb8a864e00944cf1ffdbe97e84c0';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '156', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '156', '', '', '', '', '', '8a3a1d81fe50590845ce75ccb808a2c7');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '8a3a1d81fe50590845ce75ccb808a2c7';
INSERT INTO default_arrays (def_uid, value) VALUES ('145', '10');
INSERT INTO default_arrays (def_uid, value) VALUES ('145', '30');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '145');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'd2357c5eefe0314e480026767611f8d5', 'Codec0OutputSidetoneSourceMaskB', '217', 'Enables sidetone source channels for output on the second channel of the first codec output', '', 'This is a bitmask of 8 bits, one for each source channel. A maximum of two bits can be set at the same time.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '192');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'd2357c5eefe0314e480026767611f8d5';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '157', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '157', '', '0', '', '', '', '801ca83140f989d7e30cc999874e9fb1');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '801ca83140f989d7e30cc999874e9fb1';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '146');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'bc1d79bfc0fffa2841cb356de77768a2', 'DigMic0SidetoneSourceA', '282', 'Configures the sidetone source point for the first channel of the first digital microphone', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'bc1d79bfc0fffa2841cb356de77768a2';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '158', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '158', '', '0', '', '', '', '731936077f8db15265ad23b3f96c4aa9');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '731936077f8db15265ad23b3f96c4aa9';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '147');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3aa8ff2d3fa062f950b57c23d7e4bdea', 'Pcm1TxTristateEnable', '66', 'Enable Tx tristate for second PCM instance', '', '0: drive PCM_OUT continuously.
1: tri-state PCM_OUT immediately after falling edge of PCM_CLK in the
last bit of an active slot, assuming the next slot is not active.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3aa8ff2d3fa062f950b57c23d7e4bdea';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '159', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '159', '', '0', '', '', '', 'ef0a0d1a3db6d0c15905d3a8bd3d02bf');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ef0a0d1a3db6d0c15905d3a8bd3d02bf';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '148');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'f7752f870fe1406e660b254f6306f810', 'Codec0OutputSidetoneSourceMaskA', '216', 'Enables sidetone source channels for output on the first channel of the first codec output', '', 'This is a bitmask of 8 bits, one for each source channel. A maximum of two bits can be set at the same time.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '192');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'f7752f870fe1406e660b254f6306f810';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '160', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '160', '', '0', '', '', '', '1cbd59537756e58dec516f05511bda16');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '1cbd59537756e58dec516f05511bda16';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '149');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '536708170017158b8da788409ee35172', 'Pcm2ManchRxOffset', '95', 'Manchester receive offset for third PCM instance', '', 'When in Manchester mode, selects the delay between receiving
the start bit and sampling the first significant bit from the
voice sample.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '3');
SELECT max(elem_uid) FROM config_elements WHERE hash = '536708170017158b8da788409ee35172';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '161', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '161', '', '0', '', '', '', 'e58f6fcbbd419c3960bd3cfffc34512e');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e58f6fcbbd419c3960bd3cfffc34512e';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '150');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '7116608183f6161b70edd6712a919421', 'I2s1BitsPerSample', '130', 'Bits per sample for second I2S instance', '', 'This key specifies the number of bit clocks reserved for each (mono)
sample on the second I2S interface. Valid settings are 16, 20, or
24 bits per sample.

This key does not specify how many of those bits are used for internal
data processing; see I2s1SampleSize for that. If this key is set to
a value larger than I2s1SampleSize, the additional bits are output as
zeroes in the least significant bits. On the input, if sample size
is 16 bits and bits-per-sample is greater, an attenuation can be
applied, or samples larger than 16bit can be cropped to 16bits.

This key is also used to calculate the bit clock rate when in
master mode and the I2s1MasterClockRate key is not set.
(I2s1MasterClockRate takes precedence over this key for the
purposes of supplying the master clock rate.) The calculation is
bits per sample * 2 (channels) * sample rate.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '7116608183f6161b70edd6712a919421';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '162', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '162', '', '16', '', '', '', 'f60d7fa44fd7ab51b50598ffe0d043a3');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f60d7fa44fd7ab51b50598ffe0d043a3';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '151');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c0f6ac77e6f632c4b99fe385d377fe0d', 'I2s1CropEnable', '131', 'Takes first 16bits after sync edge as sample for second I2S instance', '', 'In this mode the most significant bits after sync are taken to be the sample data.
If I2s1BitsPerSample is configured for 24/32 bits per sample, but I2s1SampleSize is
configured for 16 bits per sample only, then crop enable decides whether the I2S
interface rounds or truncates incoming 24/32 bits to 16 bits.

Additionally, it must be enabled if in 16 bit per sample mode when CLK rate = 32*sample rate.

0: Disable Cropping(or select rounding)
1: Enable Cropping

From CSRA681xx, the crop mode is selected automatically, and there is no need to
set this key; it should be left at its default value.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c0f6ac77e6f632c4b99fe385d377fe0d';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '163', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '163', '', '1', '', '', '', '60094a7378f1a2d3ba996d2eab9b78b5');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '60094a7378f1a2d3ba996d2eab9b78b5';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '152');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '55208a66ea21f9d4d9499f93a62d04b5', 'Codec1InputSidetoneSourceB', '235', 'Configures the sidetone source point for the second channel of the second codec input', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '55208a66ea21f9d4d9499f93a62d04b5';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '164', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '164', '', '0', '', '', '', '99a54be522825d1952d12bcedeb1db6a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '99a54be522825d1952d12bcedeb1db6a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '153');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '2a7068c888767c2ce081f7039ebe2667', 'Codec1InputTermination', '233', 'Selects the analog inputs for the second codec input', '', 'This is a bitfield. When bit 15 is 0, the values of the lower bits correspond to
the following standard configurations:
0: dual differential (LINEIN1_P:LINEIN1_N, LINEIN2_P:LINEIN2_N)
1: dual single-ended noninverted (LINEIN1_P, LINEIN2_P OR MICIN1, MICIN2)
2: dual single-ended inverted (LINEIN1_N, LINEIN2_N)
3: single differential(MICIN1_P, MICIN2_N)
When bit 15=1, the lower bits are a raw register value controlling the input line
selection. Not all the configurations are valid on all devices and instances. See
the device datasheet for details.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '2a7068c888767c2ce081f7039ebe2667';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '165', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '165', '', '1', '', '', '', 'da7aa816d960135e036ee26a530082c0');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'da7aa816d960135e036ee26a530082c0';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '154');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'df76046e44fcfc0b2c97bde6b222b5c9', 'Pcm2SampleFormat', '94', 'Sample format for third PCM instance', '', 'This key is only provided for backward compatibility.
Use Pcm2SampleSize to configure up to 24 bit format. If Pcm2SampleSize
is set, this key is ignored.
This key supports formats up to 16 bit.
0: 13 bits in 16 cycle slot duration,
1: 16 bits in 16 cycle slot duration,
2: 8 bits in 16 cycle slot duration,
3: 8 bits in 8 cycle slot duration.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '3');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'df76046e44fcfc0b2c97bde6b222b5c9';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '166', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '166', '', '1', '', '', '', 'ef9f5099501b97b6f8f9d5d73aacea5f');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ef9f5099501b97b6f8f9d5d73aacea5f';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '155');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1721af25c50ebd0b4be5d828e9208738', 'PanicOnFault', '7', 'Halt the system on any fault', '', 'When the chip''s firmware detects a problem that implies that it
cannot continue operation (such as running out of pool memory) it
normally calls panic(). This halts the firmware, and may reboot it.
By contrast, when the chip''s firmware encounters a problem that
it can survive (such as detecting a received corrupt packet) it
normally calls fault(), which can cause a message, a "fault report",
to be created.

If this MIB entry is set TRUE then the firmware calls panic()
when it would normally call fault().

See PanicOnFaultCode, which can alter the behaviour of PanicOnFault.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1721af25c50ebd0b4be5d828e9208738';
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '167', 'mibgetfn_common', 'get', '0');
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '167', 'mibsetfn_common', 'set', '0');
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '167', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '167', '', '0', '', '', '', '77971218a0fe8d6a34a35ec0928c7ba0');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '77971218a0fe8d6a34a35ec0928c7ba0';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '156');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '4be47e71ccdcc01a33972502d54bce57', 'Codec0InputG722FilterEnable', '199', 'Enables optional G722 filter in the first codec input', '', 'Enables optional G722 filter in the first codec input. Improves noise performance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '4be47e71ccdcc01a33972502d54bce57';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '168', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '168', '', '0', '', '', '', '575fc783d0fcb6c2216ec2e5818c14fa');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '575fc783d0fcb6c2216ec2e5818c14fa';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '157');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'f478876b08419ebd911add3528a256e8', 'Pcm3SignExtendEnable', '106', 'Enable sign extend for fourth PCM instance', '', 'Enable sign extension of 13/8-bit samples to 16-bit samples on the fourth
PCM interface.

If the key is not set, the samples are padded to 16-bits by inserting
extra LSBs. For 13-bit samples, the 3-bit padding can be selected by
setting Pcm3AudioGain accordingly. 8-bit samples are padded with zeros.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'f478876b08419ebd911add3528a256e8';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '169', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '169', '', '0', '', '', '', 'ad275180e0cd03f56820701446a1b87d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ad275180e0cd03f56820701446a1b87d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '158');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '2065c06703c7e0c1aaacf6d1d0880399', 'Spdif0OutPioConfig', '158', 'Output PIO configuration for first SPDIF instance', '', '            This key defines how output pin for first SPDIF instance (instance 0) is configured.
            The signal can be specified to use
                0 - 95: PIO number or
            If the signal is not required, it should be set to
                255: Unused', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '255');
SELECT max(elem_uid) FROM config_elements WHERE hash = '2065c06703c7e0c1aaacf6d1d0880399';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '170', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '170', '', '255', '', '', '', '73369da84f714da562bd836f63e09855');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '73369da84f714da562bd836f63e09855';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '159');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'bfa5f41377807afc44e934d25ad12ffd', 'Codec1OutputDrive', '254', 'Drive current for the headphone/speaker output of the second codec', '', 'There are two valid choices:
0: 16 Ohm
1: 32 Ohm (default)
The setting applies to both channels.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'bfa5f41377807afc44e934d25ad12ffd';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '171', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '171', '', '1', '', '', '', '2590c6919ea89678dc3b2ecef921f4a0');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '2590c6919ea89678dc3b2ecef921f4a0';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '160');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'f3b866fdf42e78f2435e0def77895300', 'Codec1OutputIndividualSidetoneEnableB', '247', 'Enables adding sidetone to the second channel of the second codec output', '', 'Source channels also have to be selected using Codec0OutputSourceMaskB.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'f3b866fdf42e78f2435e0def77895300';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '172', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '172', '', '0', '', '', '', '0d53d82202d5ed8ae2510a0050046b58');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '0d53d82202d5ed8ae2510a0050046b58';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '161');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c41a04f207a606b09866bab27eca8aa2', 'DigiMic2WarmUpDuration', '466', 'Add duration in milliseconds for taking care of digital mic warm up time', '', 'This key can be used to set a duration in milliseconds until then digital mic instance_2 data will be forcefully muted.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '100');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c41a04f207a606b09866bab27eca8aa2';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '173', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '173', '', '10', '', '', '', 'e3cfe81591a409543f5d9f851f4f2968');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e3cfe81591a409543f5d9f851f4f2968';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '162');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c00bc95d597c4f8f231dddd3aa5ac5d9', 'Pcm3SampleRisingEdgeEnable', '114', 'Sample PCM_DATA on rising edge of PCM_CLK for fourth PCM instance', '', '', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c00bc95d597c4f8f231dddd3aa5ac5d9';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '174', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '174', '', '1', '', '', '', '522150f917f58a06ba415ba34ecbc071');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '522150f917f58a06ba415ba34ecbc071';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '163');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '6f23f942d85dc625d682f323cbfa7865', 'Codec1OutputGain', '240', 'Gain for the second codec output', '', 'Output gain in approximate 3dB steps, with 15 corresponding to 0dB,
lower values to smaller gains (attenuation), and higher values to
larger gains. Depending on the range of gains implemented in a
device, settings towards the lower and upper ends of the range may
result in the same gain. Refer to the device datasheet for details.
When Codec1RawOutputGain is set, the value of this key will be ignored.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '22');
SELECT max(elem_uid) FROM config_elements WHERE hash = '6f23f942d85dc625d682f323cbfa7865';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '175', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '175', '', '15', '', '', '', 'a06e3e61ee59bc437a929b97db2bf647');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a06e3e61ee59bc437a929b97db2bf647';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '164');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '323eb01542da52e1c5cd477bdee64e0c', 'I2s1ChnlPlrty', '127', 'I2S channel polarity for second I2S instance', '', '0: Sample data is left channel when sync clock line is high
1: Sample data is right channel when sync clock line is high', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '323eb01542da52e1c5cd477bdee64e0c';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '176', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '176', '', '1', '', '', '', 'af6024d002cb3e1256f55a4cc5be65a9');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'af6024d002cb3e1256f55a4cc5be65a9';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '165');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1eae705d17a856aa6e984f97fa4f5edc', 'I2s1LftJstfyDly', '126', 'Set delay before sampling when left justified for second I2S instance', '', '0: MSB of sample data occurs in the first bit clock period after sync transition.
1: MSB of sample data occurs in the second bit clock period after sync transition.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1eae705d17a856aa6e984f97fa4f5edc';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '177', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '177', '', '1', '', '', '', '03a82f1ee977cce95f0d559dcf08f722');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '03a82f1ee977cce95f0d559dcf08f722';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '166');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '00ef8b1cad8825ec58e97cee99027204', 'Pcm1ManchRxOffset', '74', 'Manchester mode receive offset for second PCM instance', '', 'When in Manchester mode, selects the delay between receiving
the start bit and sampling the first significant bit from the
voice sample.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '3');
SELECT max(elem_uid) FROM config_elements WHERE hash = '00ef8b1cad8825ec58e97cee99027204';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '178', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '178', '', '0', '', '', '', '60bd7579d52f04c64b57b5563a47b91f');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '60bd7579d52f04c64b57b5563a47b91f';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '167');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b94fdba27c2c3e6dc43b7265fe6e7bd1', 'I2s2AudioAtten', '141', 'Attenuation in 6 dB steps for third I2S instance', '', '', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b94fdba27c2c3e6dc43b7265fe6e7bd1';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '179', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '179', '', '0', '', '', '', '004409f9d3f143367db8dec8c6abdbe8');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '004409f9d3f143367db8dec8c6abdbe8';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '168');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'cb093cf92205cbdf879633a257a8634c', 'DigMic0InputRate', '272', 'Sample rate in Hz for the first digital microphone', '', 'This key specifies the sample rate in hertz for the first digital microphone.
Valid choices are: 8000, 11025, 12000, 16000, 22050, 24000, 32000, 40000, 44100,
48000 and 96000.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '96000');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'cb093cf92205cbdf879633a257a8634c';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '180', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '180', '', '8000', '', '', '', 'bed0a9f018753fa76d0075c992dc91be');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'bed0a9f018753fa76d0075c992dc91be';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '169');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'f96f87b992f570ecd9e8372f37571e6e', 'DigMic3ClockRate', '323', 'Configures the clock rate for the fourth digital microphone', '', 'The value represents the clock rate in kHz. The supported values and resulting clock rates are:
 500: 500kHz
1000: 1MHz
2000: 2MHz
4000: 4MHz', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '500', '4000');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'f96f87b992f570ecd9e8372f37571e6e';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '181', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '181', '', '2000', '', '', '', 'f82a00340a424e742684f5de6d469707');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f82a00340a424e742684f5de6d469707';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '170');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '893ece8ce39ba91adf530f19161ba996', 'Spdif1InPioConfig', '55', 'Input PIO configuration for second SPDIF instance', '', '            This key defines how input pin for second SPDIF instance (instance 1) is configured.
            The signal can be specified to use
                0 - 95: PIO number or
            If the signal is not required, it should be set to
                255: Unused', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '255');
SELECT max(elem_uid) FROM config_elements WHERE hash = '893ece8ce39ba91adf530f19161ba996';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '182', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '182', '', '255', '', '', '', 'a3fa7ee9e3d4ec6315cdd4d4c95cf8da');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a3fa7ee9e3d4ec6315cdd4d4c95cf8da';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '171');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '93211b196e5a866a9d6a5cd94d44dcb5', 'Codec0InputG722FirEnable', '200', 'Enables optional G722 FIR filter in the first codec input', '', 'Enable optional FIR filter in the G722 filter to droop the response slightly.
This only has an effect if Codec0InputG722FilterEnable is also set.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '93211b196e5a866a9d6a5cd94d44dcb5';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '183', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '183', '', '0', '', '', '', '37ea954093cf2242c652e7fe32b3a00c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '37ea954093cf2242c652e7fe32b3a00c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '172');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '2aff0363d36d90193113ac78e25cb2a1', 'USBSinkTimedPlaybackPfactor', '438', 'To host USB Timed playback setting: P factor', '', 'P factor for the USB to host timed playback pid controller.

default value: FRACTIONAL(1.0) = 0x7fffffff = 2147483647', '', '', '', '', '', '', '', '1', 'int32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '2aff0363d36d90193113ac78e25cb2a1';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '184', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '184', '', '2147483647', '', '', '', '97fb247edef308e04ba869a238c8a325');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '97fb247edef308e04ba869a238c8a325';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '173');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'cc9bba99f8ec12a04a95c1a54cc9e33f', 'Codec1InputGain', '224', 'Gain for the second codec input', '', 'Input gain in approximate 3dB steps, with 9 corresponding to 0dB,
lower values to smaller gains (attenuation), and higher values to
larger gains. Depending on the range of gains implemented in a
device, settings at the lower and upper ends of the range may
result in the same gain. Refer to the device datasheet for details.
When Codec1RawInputGain is set, the value of this key is ignored.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '22');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'cc9bba99f8ec12a04a95c1a54cc9e33f';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '185', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '185', '', '9', '', '', '', 'e3a2fb485daebc74b819201532468042');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e3a2fb485daebc74b819201532468042';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '174');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c1996694255b78f38020cfda331b3679', 'DigMic3SampleSize', '325', 'Sample size for the fourth digital microphone', '', 'The sample size for processing is either 16 or 24 bits.
16: 16 bit
24: 24 bit', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c1996694255b78f38020cfda331b3679';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '186', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '186', '', '24', '', '', '', '257f7226b91fe688cc25249d67252d2e');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '257f7226b91fe688cc25249d67252d2e';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '175');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '354dd3e9e3b6b7a6fe2716b680db66da', 'Pcm3LongLengthSyncEnable', '113', 'Enable long length sync for fourth PCM instance', '', 'If Pcm3ShortSyncEnable is not set, this key will configure PCM_SYNC pulse
on fourth PCM instance to be 16 (long) or 8 (short) PCM_CLK cycles.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '354dd3e9e3b6b7a6fe2716b680db66da';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '187', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '187', '', '0', '', '', '', '341d59eb854fefadd516be1653123bc4');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '341d59eb854fefadd516be1653123bc4';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '176');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e1fa846d91196faf2246fd04c460ed6e', 'I2sMasterMode', '35', 'Enable master mode on first I2S instance', '', 'Setting the key to TRUE configures the hardware to generate the clock and
sync signals on the first I2S instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e1fa846d91196faf2246fd04c460ed6e';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '188', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '188', '', '0', '', '', '', 'c9885d88b3ad774380a74889c2388b24');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'c9885d88b3ad774380a74889c2388b24';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '177');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'bc5b065b977736a9f9304a890aac1af4', 'Pcm2ShortSyncEnable', '83', 'Enable short synchronisation for third PCM instance', '', 'Setting this key enables Short frame sync (sync pulse width of 1 bit clock cycle,
falling edge indicates start of frame) on the third PCM instance.

If long frame sync is selected the frame starts at rising edge of the sync pulse and
Sync pulse width depends on Pcm2LongLengthSyncEnable configuration', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'bc5b065b977736a9f9304a890aac1af4';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '189', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '189', '', '0', '', '', '', '0ad3f61dd0948532475425bd011c8518');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '0ad3f61dd0948532475425bd011c8518';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '178');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '5b169251e00a19682b1f289b9927e4e9', 'DigMic2Route', '311', 'Configures the signal routing within the third digital microphone', '', 'ADC chain routing:
0: IIR filter followed by Digital gain
1: Digital gain followed by IIR filter', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '5b169251e00a19682b1f289b9927e4e9';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '190', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '190', '', '0', '', '', '', 'a080bf1ee6d0e3d8c2626c467e1e6cc0');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a080bf1ee6d0e3d8c2626c467e1e6cc0';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '179');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '2167536499c63c2070ba058446499e79', 'Pcm3SampleSize', '169', 'Sample size for the fourth PCM interface', '', 'This key supports formats up to 24 bit.
0: 13 bits in 16 cycle slot duration,
1: 16 bits in 16 cycle slot duration,
2: 8 bits in 16 cycle slot duration,
3: 8 bits in 8 cycle slot duration,
16: 16 bits in 16 cycle slot duration,
24: 24 bits in 24 cycle slot duration.
If this key is set, it takes precedence over Pcm3SampleFormat.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '2167536499c63c2070ba058446499e79';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '191', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0f87e5d72b5751957520c3cf37fc1d9a', 'MclkInvert', '425', 'Invert MCLK signal to change MCLK vs PCM/I2S phase alignment', '', 'This key allows the phase relationship between the MCLK signal and
other signals of I2S/PCM interfaces (bit-clock etc) to be adjusted.

It can be used with a generated MCLK output (but only if that output
uses dedicated routing, i.e., 0xFE in the third element of
Pcm*PioConfig) or an MCLK input signal.

If set, any MCLK output does not change, but an inverted version of
the MCLK signal is used internally by the device (for all PCM/I2S
interfaces), with the net effect that the other interface signals are
delayed by half an MCLK cycle relative to the MCLK signal.

(If an MCLK signal is output as part of an interface using PIO routing --
numbers other than 0xFE in Pcm*PioConfig -- this key cannot be used to
effect a phase adjustment between the MCLK and other outputs. In this case
the only effect will be to invert the MCLK output, which will only be
observable if the MCLK signal does not have a 50/50 mark/space ratio.)', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0f87e5d72b5751957520c3cf37fc1d9a';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '192', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '192', '', '0', '', '', '', 'b569f87f63ddd30dca4f63cc90c47b02');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'b569f87f63ddd30dca4f63cc90c47b02';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '180');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '530a5a7794ab900b33d11e4fa7e41491', 'Codec0InputGain', '192', 'Gain for the first codec input', '', 'Input gain in approximate 3dB steps, with 9 corresponding to 0dB,
lower values to smaller gains (attenuation), and higher values to
larger gains. Depending on the range of gains implemented in a
device, settings at the lower and upper ends of the range may
result in the same gain. Refer to the device datasheet for details.
When Codec0RawInputGain is set, the value of this key is ignored.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '22');
SELECT max(elem_uid) FROM config_elements WHERE hash = '530a5a7794ab900b33d11e4fa7e41491';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '193', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '193', '', '9', '', '', '', '5308948bf16fb29b1c04511078fafc61');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '5308948bf16fb29b1c04511078fafc61';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '181');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a8fc5162e7f131d884a362e63b6fc49e', 'Pcm1SyncSuppressEnable', '68', 'Suppress frame synchronisation for second PCM instance', '', 'Suppress PCM_SYNC on the second PCM instance while generating PCM_CLK (in master mode).
Some codecs (connected to the PCM interface) use this to enter a low power state.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a8fc5162e7f131d884a362e63b6fc49e';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '194', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '194', '', '0', '', '', '', '31c6b730a0c07b2e10165f041e0ef524');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '31c6b730a0c07b2e10165f041e0ef524';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '182');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '86464d50b2823c99683192754e95e084', 'DigMic2G722FilterEnable', '312', 'Enables optional G722 filter in the third digital microphone', '', 'Enables optional G722 filter in the third digital microphone. Improves noise performance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '86464d50b2823c99683192754e95e084';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '195', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '195', '', '0', '', '', '', 'ff396672b4d0f624c58acb468098b96f');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ff396672b4d0f624c58acb468098b96f';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '183');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '836400837932204fa6f5a42cfddbf1fd', 'Pcm3ManchSlaveModeEnable', '105', 'Enable Manchester slave mode for fourth PCM instance', '', 'Setting this key forces transmit frames to follow receive frames with
constant delay on the fourth PCM instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '836400837932204fa6f5a42cfddbf1fd';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '196', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '196', '', '0', '', '', '', '4fcba9b72142321efdefd937dbb31799');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '4fcba9b72142321efdefd937dbb31799';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '184');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '5dd9aada62c7ae59ee35817fc1c114e9', 'Pcm1SampleFormat', '73', 'Sample format for second PCM instance', '', 'This key is only provided for backward compatibility.
Use Pcm1SampleSize to configure up to 24 bit format. If Pcm1SampleSize
is set, this key is ignored.
This key supports formats up to 16 bit.
0: 13 bits in 16 cycle slot duration,
1: 16 bits in 16 cycle slot duration,
2: 8 bits in 16 cycle slot duration,
3: 8 bits in 8 cycle slot duration.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '3');
SELECT max(elem_uid) FROM config_elements WHERE hash = '5dd9aada62c7ae59ee35817fc1c114e9';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '197', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '197', '', '1', '', '', '', '4949d12408f0adb0d9bdea2eaa38f20e');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '4949d12408f0adb0d9bdea2eaa38f20e';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '185');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '5f674a6362de9382a3911b25fb7fe438', 'ChipVersion', '3', 'Chip hardware major version number', '', 'The numeric identifier for the HydraCore silicon version.

See the description of ChipRevision', '', '', '', '', '', '', '', '1', 'uint16', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '5f674a6362de9382a3911b25fb7fe438';
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '198', 'mibgetfn_common', 'get', '0');
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '198', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '734953ff06e550192189ae11bdcfdd48', 'DigMic1PioConfig', '163', 'PIO configuration for second Digital Mic instance', '', '            This key defines how pins for second Digital Mic instance (instance 1) are configured.
            The octet string key value contains a value each for the CLK_OUT & DATA_IN signal lines
            in that order. Each signal can be specified to use
                0x00 - 0x5F: PIO number or
            If the signal is not required, it should be set to
                0xFF: Unused
            If multiple digital mic instances share the same clock pin, set the CLK_OUT signal on any one
            of the instances to the required PIO number and set it to Unused on all the other instances.
            All digital mic channels that share a clock in this way must be placed in a sync group. Also,
            digital mic endpoints on the instance that defines CLK_OUT should be connected first for the
            clock to be enabled.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '2', '2');
SELECT max(elem_uid) FROM config_elements WHERE hash = '734953ff06e550192189ae11bdcfdd48';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '199', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '199', '', '', '', '', '', 'ad63d2f2392cbf4204de4352c60a3b14');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ad63d2f2392cbf4204de4352c60a3b14';
INSERT INTO default_arrays (def_uid, value) VALUES ('186', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('186', '255');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '186');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'df48e817ce41de24b223d4fb84fc44a7', 'DigiMic1WarmUpDuration', '465', 'Add duration in milliseconds for taking care of digital mic warm up time', '', 'This key can be used to set a duration in milliseconds until then digital mic instance_1 data will be forcefully muted.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '100');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'df48e817ce41de24b223d4fb84fc44a7';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '200', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '200', '', '10', '', '', '', '9bee8a54ddf3b294e4509b2208622388');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '9bee8a54ddf3b294e4509b2208622388';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '187');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'af54c80f041ea42bdbd00b4e31dce982', 'DigMic2SidetoneGainB', '317', 'Configures the sidetone gain for the second channel of the third digital microphone', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'af54c80f041ea42bdbd00b4e31dce982';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '201', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'd9e9c6445b58c2b85bb63dcd5c27252b', 'DigMic2SidetoneGainA', '316', 'Configures the sidetone gain for the first channel of the third digital microphone', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'd9e9c6445b58c2b85bb63dcd5c27252b';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '202', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '74f258629760c45bf3b8fe5adc0a38f1', 'I2sRxStartSample', '44', 'Defines when RX begins for first I2S instance', '', '0: I2S reception begins during low sync clock phase.
1: I2S reception begins during high sync clock phase.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '74f258629760c45bf3b8fe5adc0a38f1';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '203', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '203', '', '1', '', '', '', '90342b251b83d5f457d00d70837691fd');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '90342b251b83d5f457d00d70837691fd';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '188');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '4df8a84c8d22f4005eccf62bd92017b7', 'PcmManchSlaveModeEnable', '17', 'Enable Manchester slave mode for first PCM instance', '', 'Setting this key forces transmit frames to follow receive frames with
constant delay on the first PCM instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '4df8a84c8d22f4005eccf62bd92017b7';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '204', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '204', '', '0', '', '', '', 'de34a45c815bb49d9e22fc56447172d1');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'de34a45c815bb49d9e22fc56447172d1';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '189');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'fdd48c352e624e5702affcc5c77b3fbb', 'I2s2MasterClockRate', '135', 'Master clock rate in hertz for third I2S instance', '', 'When acting as a master on the third digital interface in I2S mode, this key
allows the specification in hertz of the exact clock rate to be generated.

If set to zero, the firmware calculates the clock rate based on the
sync rate and bits per sample.

Note: the name MasterClockRate is historical; this key pertains to the bit
clock frequency, not the frequency of any MCLK signal in the system.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '0', '8000000');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'fdd48c352e624e5702affcc5c77b3fbb';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '205', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '205', '', '0', '', '', '', '47bed5c4850fcda58666e8864a3486eb');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '47bed5c4850fcda58666e8864a3486eb';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '190');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '310b2d528ce757a7c30c8a8bbd4b1191', 'Pcm2SampleSize', '168', 'Sample size for the third PCM interface', '', 'This key supports formats up to 24 bit.
0: 13 bits in 16 cycle slot duration,
1: 16 bits in 16 cycle slot duration,
2: 8 bits in 16 cycle slot duration,
3: 8 bits in 8 cycle slot duration,
16: 16 bits in 16 cycle slot duration,
24: 24 bits in 24 cycle slot duration.
If this key is set, it takes precedence over Pcm2SampleFormat.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '310b2d528ce757a7c30c8a8bbd4b1191';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '206', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '18106802cce1191dc929c2ae24341dec', 'Pcm2TxTristateRisingEdgeEnable', '88', 'Enable Tx tristate rising edge for third PCM instance', '', 'This key is only effective if Pcm2TxTristateEnable is set
0: tri-state PCM_OUT immediately after falling edge of PCM_CLK in
last bit of an active slot, assuming the next slot is also not active.
1: tri-state PCM_OUT after rising edge of PCM_CLK after the last data
bit of an active slot.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '18106802cce1191dc929c2ae24341dec';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '207', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '207', '', '0', '', '', '', '0c47c06544c76bc55b43909964756f3c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '0c47c06544c76bc55b43909964756f3c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '191');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e2e7ae70b39b634d6b9013a8b66022c1', 'I2s2SampleSize', '172', 'Sample size for the third I2S interface', '', 'The sample size is either 16 bits or 24 bits.
16: 16 bit
24: 24 bit
This setting applies to both input and output, and to both channels.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e2e7ae70b39b634d6b9013a8b66022c1';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '208', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '208', '', '16', '', '', '', '07d3cf55346c2f175cb394d48d636a44');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '07d3cf55346c2f175cb394d48d636a44';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '192');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '73e068c44255908a68429a51b5345f3a', 'Codec1OutputSidetoneInjectionPointA', '250', 'Configures routing of the sidetone to the first channel of the second codec output', '', 'The valid choices are:
0: Side tone is added after the digital gain.
1: Side tone is added before the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '73e068c44255908a68429a51b5345f3a';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '209', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '209', '', '1', '', '', '', '61aef62d98edb91a2ad4de6fbc8ef8fd');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '61aef62d98edb91a2ad4de6fbc8ef8fd';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '193');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'bfc1460c5454de1b8d6651a404ded193', 'Spdif1OutputRate', '406', 'The sample rate in Hz for the second SPDIF output', '', 'This key specifies the sample rate in hertz for the second SPDIF output instance.
Supported sample rates are: 22050, 24000, 32000, 44100, 48000, 88200, 96000, 176400, 192000.
This setting applies to both channels.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '22050', '192000');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'bfc1460c5454de1b8d6651a404ded193';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '210', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '210', '', '48000', '', '', '', '1c8361d0cb03f765c913d8978a08b19f');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '1c8361d0cb03f765c913d8978a08b19f';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '194');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'f10eb767b8cbec07c743207494eb2cdc', 'Codec0OutputIndividualSidetoneEnableB', '215', 'Enables adding sidetone to the second channel of the first codec output', '', 'Source channels also have to be selected using Codec0OutputSourceMaskB.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'f10eb767b8cbec07c743207494eb2cdc';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '211', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '211', '', '0', '', '', '', '778da2febb7ee3531d1985190a6a6524');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '778da2febb7ee3531d1985190a6a6524';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '195');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '679a8e1179fca532746eed44f6056d28', 'Pcm3SyncSuppressEnable', '110', 'Suppress frame synchronisation for fourth PCM instance', '', 'Suppress PCM_SYNC on the fourth PCM instance while generating PCM_CLK (in master mode).
Some codecs (connected to the PCM interface) use this to enter a low power state.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '679a8e1179fca532746eed44f6056d28';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '212', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '212', '', '0', '', '', '', '08d39a705471134296d96e6a5e3f7857');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '08d39a705471134296d96e6a5e3f7857';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '196');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '84f0859505b87ea136318bda6c4fcab3', 'Pcm2SyncRate', '97', 'The PCM_SYNC rate for third PCM instance', '', 'This key specifies the sync rate in hertz for the third digital
interface when operating as a master in PCM mode.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '48000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '84f0859505b87ea136318bda6c4fcab3';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '213', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '213', '', '8000', '', '', '', 'df40fa89e95d2ca8b67b0edd616b5fff');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'df40fa89e95d2ca8b67b0edd616b5fff';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '197');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c1d4cf1392a6cc12aa91f4890043191f', 'Codec1InputSidetoneGainA', '236', 'Configures the sidetone gain for the first channel of the second codec input', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c1d4cf1392a6cc12aa91f4890043191f';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '214', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e9f03a908f3ae4ad196ecc9390b74c44', 'I2s1AudioAtten', '129', 'Attenuation in 6 dB steps for second I2S instance', '', '', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e9f03a908f3ae4ad196ecc9390b74c44';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '215', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '215', '', '0', '', '', '', '5535fa742c92af9bb8003c92113a99ea');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '5535fa742c92af9bb8003c92113a99ea';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '198');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '85449dd78a648a2955a6de2a5390c4d8', 'Pcm2AudioGain', '98', 'Sample gain value for third PCM instance', '', 'Some Codecs allow their gain to be controlled by 3 extra bits
received at the end of a 13-bit PCM sample. This key allows the
value of those 3 bits to be specified for the third PCM instance.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '7');
SELECT max(elem_uid) FROM config_elements WHERE hash = '85449dd78a648a2955a6de2a5390c4d8';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '216', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '216', '', '0', '', '', '', 'f6b7b9fdf39f8439bc3b9610dc61c14a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f6b7b9fdf39f8439bc3b9610dc61c14a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '199');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b788f72f63d69781b570dbdc8e23a9ad', 'HeapAllocation', '418', 'Sizes of the heaps for each processor', '', 'This key allows partitioning the memory available for heaps
between the processor cores.
The value is an array of 6 octets, each octet represents the size of
a heap partition in kilobytes.
Note octet string values are in hex.
 octet 0: heap 1 for 0,
 octet 1: heap 2 for 0,
 octet 2: heap 3 for 0,
 octet 3: heap 1 for P1,
 octet 4: heap 2 for P1,
 octet 5: heap 3 for P1.
For CSRA68100:
 heap 1 for 0 uses slow memory accessible through DM1
 heap 2 for 0 uses fast memory accessible through DM2
 heap 3 for 0 uses fast memory accessible through DM1
 heap 1 for P1 uses slow memory accessible through DM1
 heap 2 for P1 uses fast memory accessible through DM2
 heap 3 for P1 uses fast memory accessible through DM1
For QCC340x, QCA669x, and QCC514x:
 heap 1 for 0 uses memory accessible through DM1
 heap 2 for 0 uses memory accessible through DM2
 heap 3 for 0 is unused. Set to 0.
 heap 1 for P1 uses memory accessible through DM1
 heap 2 for P1 uses memory accessible through DM2
 heap 3 for P1 is unused. Set to 0.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '6', '6');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b788f72f63d69781b570dbdc8e23a9ad';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '217', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '217', '', '', '', '', '', '5a72b5e7ab1298c5ef34de0514ede0f2');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '5a72b5e7ab1298c5ef34de0514ede0f2';
INSERT INTO default_arrays (def_uid, value) VALUES ('200', '65');
INSERT INTO default_arrays (def_uid, value) VALUES ('200', '33');
INSERT INTO default_arrays (def_uid, value) VALUES ('200', '0');
INSERT INTO default_arrays (def_uid, value) VALUES ('200', '16');
INSERT INTO default_arrays (def_uid, value) VALUES ('200', '14');
INSERT INTO default_arrays (def_uid, value) VALUES ('200', '0');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '200');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '50740ce36bb783c9266425d042f96bb9', 'DigMic2InputRate', '304', 'Sample rate in Hz for the third digital microphone', '', 'This key specifies the sample rate in hertz for the third digital microphone.
Valid choices are: 8000, 11025, 12000, 16000, 22050, 24000, 32000, 40000, 44100,
48000 and 96000.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '96000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '50740ce36bb783c9266425d042f96bb9';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '218', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '218', '', '8000', '', '', '', '0838ad3e2c6a0094a97211167d0fa801');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '0838ad3e2c6a0094a97211167d0fa801';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '201');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '79b81b969b19f6de782af80ef6a6a83c', 'PcmSyncSuppressEnable', '22', 'Suppress frame synchronisation for first PCM instance', '', 'Suppress PCM_SYNC on the first PCM instance while generating PCM_CLK (in master mode).
Some codecs (connected to the PCM interface) use this to enter a low power state.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '79b81b969b19f6de782af80ef6a6a83c';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '219', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '219', '', '0', '', '', '', '615c3e73ee3606681a681e0266d38676');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '615c3e73ee3606681a681e0266d38676';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '202');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '05609f0ae2738103135f57bbcd47a8e6', 'Pcm3UseLowJitterMode', '120', 'Force fourth PCM interface clock to use low jitter mode when running at 8 kHz', '', 'For some very specific PCM configurations, this configures the clock source used to generate CLK and SYNC for fourth PCM instance.
0: a fixed internal clock is used
1: a more flexible clock generator driven from a higher-frequency internal clock is used

This only takes effect with a sync rate of 8kHz and a bit clock rate of 128/256/512kHz; in other configurations, it is forced to 1.
Various other configuration parameters can also cause it to be forced to 1. Not all non-default PCM features may work if this is set to 0.

Selecting low jitter mode increases power consumption.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '05609f0ae2738103135f57bbcd47a8e6';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '220', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '220', '', '0', '', '', '', '1d1bc4c0f0f12a8e98403f48a9bf27ae');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '1d1bc4c0f0f12a8e98403f48a9bf27ae';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '203');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a7dcb52cec9f41363047cbb61dd5ee22', 'DigMic2G722FirEnable', '313', 'Enables optional G722 FIR filter in the third digital microphone', '', 'Enable optional FIR filter in the G722 filter to droop the response slightly.
This only has an effect if Codec0InputG722FilterEnable is also set.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a7dcb52cec9f41363047cbb61dd5ee22';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '221', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '221', '', '0', '', '', '', '19bb9a71cfa8958e8f8508f5d4e1e0ad');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '19bb9a71cfa8958e8f8508f5d4e1e0ad';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '204');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '405d2d50b452301085835ed4bfc4f66d', 'Spdif0ReceiveAccuracy', '401', 'Selects the receive frequency accuracy threshold for the first SPDIF input', '', '0: Low accuracy (approx. 1%)
1: High accuracy (approx. 0.4%)', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '405d2d50b452301085835ed4bfc4f66d';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '222', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '222', '', '0', '', '', '', 'ad0bc97ef0f3402c600fa739cc383789');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ad0bc97ef0f3402c600fa739cc383789';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '205');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a049bc1f9d27a651be7d7d37b768238c', 'DigMic0DataSource', '278', 'Configures the signal routing within the first digital microphone', '', 'ADC data source selection from:
0: output of the IIR Filter
1: output of the digital gain stage', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a049bc1f9d27a651be7d7d37b768238c';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '223', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '223', '', '1', '', '', '', '7fd005e171e41488da3337a173153a5a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7fd005e171e41488da3337a173153a5a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '206');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '8dd1d3a3e7170c2a16dae383bf7320e3', 'Codec1InputSidetoneGainB', '237', 'Configures the sidetone gain for the second channel of the second codec input', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = '8dd1d3a3e7170c2a16dae383bf7320e3';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '224', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '8d7b3d7ad5becf169f05b862fdf28bf5', 'Pcm1SlotCount', '75', 'Number of slots in a PCM frame for second PCM instance', '', 'This key specifies the number of PCM slots (1-4) that are to be present
between sync pulses on the second digital interface.
If the key Pcm1MasterClockRate is set, this key is ignored as a
request has been made for a specific master clock frequency.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '4');
SELECT max(elem_uid) FROM config_elements WHERE hash = '8d7b3d7ad5becf169f05b862fdf28bf5';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '225', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '225', '', '0', '', '', '', '9eedf925f19016397c408b0fade4bfbe');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '9eedf925f19016397c408b0fade4bfbe';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '207');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e3bf712ea5e46916883c27607861b549', 'Codec1RawOutputGain', '241', 'Low level gain control for the second codec output', '', 'The value for this key consists of bit fields for registers which
control the codec output gain. Refer to the device datasheet for details
of this setting.
When a valid value for this key is set, Codec1OutputGain will be ignored.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e3bf712ea5e46916883c27607861b549';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '226', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '7ed09fc01b61c4de154cb9b2c203a81f', 'DigMic3SidetoneSourceB', '331', 'Configures the sidetone source point for the second channel of the fourth digital microphone', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '7ed09fc01b61c4de154cb9b2c203a81f';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '227', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '227', '', '0', '', '', '', '392ec01821cfa91ed7106960005674c1');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '392ec01821cfa91ed7106960005674c1';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '208');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '08f0e078ee2112ced1c9e305eb62efd7', 'Codec0OutputRate', '210', 'The sample rate in Hz for the first codec output', '', 'This key specifies the sample rate in hertz for the first codec output.
Supported sample rates are: 8000, 11025, 12000, 16000, 22050, 24000, 32000,
40000, 44100, 48000, 96000 and 192000.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '192000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '08f0e078ee2112ced1c9e305eb62efd7';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '228', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '228', '', '8000', '', '', '', 'f4c822bfd071d8815b15c5fd53885dcb');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f4c822bfd071d8815b15c5fd53885dcb';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '209');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a214b22b88157da4eab119b985f2c1ed', 'I2sSyncRate', '33', 'Synchronisation rate in hertz for first I2S instance', '', 'This key specifies the sync rate in hertz for the first digital
interface when operating as a master in I2S mode.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '48000');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a214b22b88157da4eab119b985f2c1ed';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '229', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '229', '', '8000', '', '', '', '9ae24e96b62eb4200bcada469d584da7');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '9ae24e96b62eb4200bcada469d584da7';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '210');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '6f0ababf6661e548b0dbc7fb216fc396', 'ProfilerEnable', '423', 'Enable the built-in profiler', '', 'The audio subsystem software has a built-in profiler, which accounts
processor time consumption to individual operators and other tasks.
The profiler data can be read with a variety of debugging facilities.

This key enables this profiler. It is disabled by default, as the
profiler itself can consume a significant amount of processor time.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '6f0ababf6661e548b0dbc7fb216fc396';
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '230', 'mibgetfn_common', 'get', '0');
INSERT INTO functions (func_uid, elem_uid, function_name, type, is_for_vif) VALUES(NULL, '230', 'mibsetfn_common', 'set', '0');
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '230', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '230', '', '1', '', '', '', 'f4cf1adf37e5090398585da76eef0a32');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f4cf1adf37e5090398585da76eef0a32';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '211');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '83bf86ae80ff08689192da11a6569047', 'IsAncIirFilter16k', '476', 'Set ANC IIR filter bandwidth to 8KHz or 16KHz', '', '            This key is used to set IIR filter bandwidth of ANC to 16KHz or 8KHz.
            By default bandwidth is 8KHz.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '83bf86ae80ff08689192da11a6569047';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '231', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '231', '', '0', '', '', '', '831edad406a469961a76e31d08c94faf');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '831edad406a469961a76e31d08c94faf';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '212');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '2656b9474a875d3839ac214352eccc78', 'Spdif0OutputRate', '402', 'The sample rate in Hz for the first SPDIF output', '', 'This key specifies the sample rate in hertz for the first SPDIF output instance.
Supported sample rates are: 22050, 24000, 32000, 44100, 48000, 88200, 96000, 176400, 192000.
This setting applies to both channels.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '22050', '192000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '2656b9474a875d3839ac214352eccc78';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '232', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '232', '', '48000', '', '', '', 'af78fd235d7dc5b316a1115248670cd5');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'af78fd235d7dc5b316a1115248670cd5';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '213');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '8afddc6bee581bbf375e2afb7303468c', 'Pcm2ManchSlaveModeEnable', '84', 'Enable Manchester slave mode for third PCM instance', '', 'Setting this key forces transmit frames to follow receive frames with
constant delay on the third PCM instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '8afddc6bee581bbf375e2afb7303468c';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '233', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '233', '', '0', '', '', '', 'f54dc4a82955ae42625a6676bd9609c2');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f54dc4a82955ae42625a6676bd9609c2';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '214');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '64a85c76035f215eca2b660697c8147b', 'I2s2AudioAttenEnable', '140', 'Enable attenuation on input data for third I2S instance', '', 'Enables/disables the attenuation applied to incoming (into device) audio samples in case the I2s2BitsPerSample
is set to 20 or 24 bits per sample on the third I2S instance.

false: 17 bit sample data is rounded down to 16 bits.
true : the audio attenuation defined in the MIB key I2s2AudioAtten is applied over 24 bits with saturated rounding.

Requires I2s2CropEnable to be 0.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '64a85c76035f215eca2b660697c8147b';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '234', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '234', '', '0', '', '', '', 'bb9a69c6cb062c7ddbefd978e3ec9dfb');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'bb9a69c6cb062c7ddbefd978e3ec9dfb';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '215');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'ccdf0914694f4c75eac7e5847d83863c', 'Pcm1MasterClockRate', '59', 'Second PCM interface override for clock rate', '', 'When acting as a master on the second digital interface in PCM mode, this key
allows the specification in hertz of the exact clock rate to be generated.

If set to zero, the firmware calculates the clock rate based
on the sync rate, bits per sample and slots per frame.

Note: the name MasterClockRate is historical; this key pertains to the bit
clock frequency, not the frequency of any MCLK signal in the system.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '0', '8000000');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'ccdf0914694f4c75eac7e5847d83863c';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '235', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '235', '', '1024000', '', '', '', '816542e15e6a767e4e09afaf2b832960');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '816542e15e6a767e4e09afaf2b832960';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '216');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '95951096256e9b90427f5ae15d403cd6', 'DigMic1InputGain', '289', 'Input gain for the second digital microphone', '', 'This is a bitfield value. If bit 15 is cleared, the lower 4 bits contain
a gain in 2''s complement format, zero representing unity gain, and roughly 3dB steps.
I.e. the approximate gains for each value between 0x0000 and 0x000F are:
0x0007: 21dB
0x0006: 18dB
0x0005: 15dB
0x0004: 12dB
0x0003: 9dB
0x0002: 6dB
0x0001: 3dB
0x0000: 0dB
0x000F: -3dB
0x000E: -6dB
0x000D: -9dB
0x000C: -12dB
0x000B: -15dB
0x000A: -18dB
0x0009: -21dB
0x0008: -24dB

If bit 15 is set, the lower 9 bits represent a linear gain scale in steps of 1/32,
i.e. from 0x8000 = mute, 0x8001 = approx. -30dB, to 0x81FF = approx. 24dB.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '65535');
SELECT max(elem_uid) FROM config_elements WHERE hash = '95951096256e9b90427f5ae15d403cd6';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '236', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '236', '', '0', '', '', '', '4f66f924931b4395bc41c79ccc3d8267');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '4f66f924931b4395bc41c79ccc3d8267';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '217');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e9a962bcb68e8a83052fb3f001841c31', 'TimedPlaybackErrorDecline', '421', 'Timed playback setting: error decline speed', '', 'timed playback:Max speed the error can decline.

default value: FRACTIONAL(0.98) = 0x7d70a3d6 = 2104533974', '', '', '', '', '', '', '', '1', 'int32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e9a962bcb68e8a83052fb3f001841c31';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '237', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '237', '', '2104533974', '', '', '', '77b2d3e4ac6593e7afb895651199fa96');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '77b2d3e4ac6593e7afb895651199fa96';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '218');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1df30584d1648b23f4b66fc885266d67', 'USBSinkMaxPacketsInOutputBuffer', '437', 'Configures maximum number of packets in the USB to host output buffer', '', 'To control the to host latency, the USB sink endpoint will keep the maximum number of buffered packets in the
output buffer at a certain number. The output buffer size MUST be big enough to be able to contain this number
of packets.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '3', '6');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1df30584d1648b23f4b66fc885266d67';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '238', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '238', '', '3', '', '', '', '62b5e26289543c331d5f46b3e1d1fb2d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '62b5e26289543c331d5f46b3e1d1fb2d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '219');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'd8c8d2db8e049031c4de7797fdda5347', 'DigMic3G722FilterEnable', '328', 'Enables optional G722 filter in the fourth digital microphone', '', 'Enables optional G722 filter in the fourth digital microphone. Improves noise performance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'd8c8d2db8e049031c4de7797fdda5347';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '239', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '239', '', '0', '', '', '', '2de8848ace830dfd39c664c16af73c53');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '2de8848ace830dfd39c664c16af73c53';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '220');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'f5e05aeaa3231bbc14e4ac3e1064e341', 'Pcm2MasterMode', '81', 'Enable PCM master mode for third PCM instance', '', 'Setting the key to TRUE configures the hardware to generate the clock and
sync signals on the third PCM instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'f5e05aeaa3231bbc14e4ac3e1064e341';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '240', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '240', '', '1', '', '', '', '2eaf6e6046d2d743e2ec4eed88dd6032');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '2eaf6e6046d2d743e2ec4eed88dd6032';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '221');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1fba9c2c95643f3b9d90f901a290d7a9', 'PcmSampleFormat', '27', 'Sample format for first PCM instance', '', 'This key is only provided for backward compatibility.
Use PcmSampleSize to configure up to 24 bit format. If PcmSampleSize
is set, this key is ignored.
This key supports formats up to 16 bit.
0: 13 bits in 16 cycle slot duration,
1: 16 bits in 16 cycle slot duration,
2: 8 bits in 16 cycle slot duration,
3: 8 bits in 8 cycle slot duration.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '3');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1fba9c2c95643f3b9d90f901a290d7a9';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '241', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '241', '', '1', '', '', '', 'a37eb4041c5a47208ecb6cfdb860205d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a37eb4041c5a47208ecb6cfdb860205d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '222');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a17e1c09a2e8f0c82a10f731bb2ff288', 'I2s1RxStartSample', '133', 'Defines when RX begins for second I2S instance', '', '0: I2S reception begins during low sync clock phase.
1: I2S reception begins during high sync clock phase.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a17e1c09a2e8f0c82a10f731bb2ff288';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '242', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '242', '', '1', '', '', '', 'ad036ea2a092182436e846981cf8c6f4');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ad036ea2a092182436e846981cf8c6f4';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '223');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '71779f70a890303e785bd9a7c9e51f67', 'Spdif2InPioConfig', '56', 'Input PIO configuration for third SPDIF instance', '', '            This key defines how input pin for third SPDIF instance (instance 2) is configured.
            The signal can be specified to use
                0 - 95: PIO number or
            If the signal is not required, it should be set to
                255: Unused', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '255');
SELECT max(elem_uid) FROM config_elements WHERE hash = '71779f70a890303e785bd9a7c9e51f67';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '243', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '243', '', '255', '', '', '', 'fcb1a8de23cc5a19bcbb1e7d1f7c702b');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fcb1a8de23cc5a19bcbb1e7d1f7c702b';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '224');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '82b1ad8f672480f81523857656739bf7', 'DigMic1AmpSel', '292', 'Configures the input levels for the second digital microphone', '', 'Valid choices are: 0x0700, 0x0601, 0x0502, 0x0403.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '1027', '1792');
SELECT max(elem_uid) FROM config_elements WHERE hash = '82b1ad8f672480f81523857656739bf7';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '244', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '244', '', '1792', '', '', '', 'd04c48d0bec6cbf441d7b45a65dc3d4a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd04c48d0bec6cbf441d7b45a65dc3d4a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '225');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '5cf832f41f19e79b29fa9a9a70094cfc', 'I2sTxStartSample', '43', 'Defines when TX begins for first I2S instance', '', '0: I2S transmission begins during low sync clock phase.
1: I2S transmission begins during high sync clock phase.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '5cf832f41f19e79b29fa9a9a70094cfc';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '245', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '245', '', '0', '', '', '', '1565bf5cbab8d576e15cc35c6426b7bb');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '1565bf5cbab8d576e15cc35c6426b7bb';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '226');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '78b60df4800a30ff8b4bb22f255aa837', 'Pcm3GciModeEnable', '111', 'Enable GCI mode for fourth PCM instance', '', 'Enable PCM GCI mode.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '78b60df4800a30ff8b4bb22f255aa837';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '246', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '246', '', '0', '', '', '', 'eccfb921fd1198936e6aa63920d3299d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'eccfb921fd1198936e6aa63920d3299d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '227');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'fa174efce53fd312cc19d34e621bf109', 'Pcm1MasterMode', '60', 'Enable master mode for second PCM instance', '', 'Setting the key to TRUE configures the hardware to generate the clock and
sync signals on the second PCM instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'fa174efce53fd312cc19d34e621bf109';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '247', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '247', '', '1', '', '', '', 'a3529f86e4718127a3e95d75ff915e3d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a3529f86e4718127a3e95d75ff915e3d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '228');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e3266e2e76394b14eb3fe5074c80230f', 'CodecOutputDisableTimeout', '259', 'Delay for turning off codec output hardware', '', 'To reduce pops and clicks during fast close/open sequences of codec devices,
this setting allows delaying part of the deactivation of the output
hardware. The interval is specified in microseconds.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e3266e2e76394b14eb3fe5074c80230f';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '248', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '248', '', '0', '', '', '', '02404d65630a7a64e22c007282ef323a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '02404d65630a7a64e22c007282ef323a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '229');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '8a41d40da6bc809e20ff2f1b5d69ca8b', 'Codec1InputG722FilterEnable', '231', 'Enables optional G722 filter in the second codec input', '', 'Enables optional G722 filter in the second codec input. Improves noise performance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '8a41d40da6bc809e20ff2f1b5d69ca8b';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '249', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '249', '', '0', '', '', '', '06e63929131fa7363f776ca36680175b');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '06e63929131fa7363f776ca36680175b';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '230');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '2e7743dcb94b2a5bf207be60a13233fb', 'USBSinkOutputBufferSize', '434', 'Configures the To Host USB (USB Tx) output buffer size in octets', '', 'This key configures the size of the output buffer for USB Sink (to Host) endpoint,
the size will be rounded up to nearest power of two value. The buffer needs to be able
to contain sufficient number of audio packets to cover jitter in the system. The required buffer
size varies depending on the largest sample rate, channels and the frame size that are going to
be supported. Use the production of the following four terms to configure the buffer size::

-maximum number of packets: default and minimum is 3 but can be set using USBSinkMaxPacketsInOutputBuffer MIB key
-channels: maximum number of channels to be supported (2 for stereo)
-subframe_size: number of octets in each audio sub frame (3 for 24-bit support)
-max packet len in frames: use (max_sample_rate/1000 + 1)', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '4096');
SELECT max(elem_uid) FROM config_elements WHERE hash = '2e7743dcb94b2a5bf207be60a13233fb';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '250', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '250', '', '1024', '', '', '', 'fa65b296859ba65ad11e5c47463c34de');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fa65b296859ba65ad11e5c47463c34de';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '231');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '4a4e5cfcbd95c8daae03327eb946a95a', 'Pcm3SampleFormat', '115', 'Sample format for fourth PCM instance', '', 'This key is only provided for backward compatibility.
Use Pcm3SampleSize to configure up to 24 bit format. If Pcm3SampleSize
is set, this key is ignored.
This key supports formats up to 16 bit.
0: 13 bits in 16 cycle slot duration,
1: 16 bits in 16 cycle slot duration,
2: 8 bits in 16 cycle slot duration,
3: 8 bits in 8 cycle slot duration.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '3');
SELECT max(elem_uid) FROM config_elements WHERE hash = '4a4e5cfcbd95c8daae03327eb946a95a';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '251', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '251', '', '1', '', '', '', 'ab3c54005dabfac65f0273e107d38c90');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ab3c54005dabfac65f0273e107d38c90';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '232');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '595c7030e9efafd4de4a6a849f57886a', 'I2s2SyncRate', '134', 'Synchronisation rate in hertz for third I2S instance', '', 'This key specifies the sync rate in hertz for the third digital
interface when operating as a master in I2S mode.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '48000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '595c7030e9efafd4de4a6a849f57886a';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '252', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '252', '', '8000', '', '', '', 'f5155ce486a090c66ca2abab0494c239');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f5155ce486a090c66ca2abab0494c239';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '233');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'ff36a43003280a893fe48889ed478a5b', 'DigMic0G722FilterEnable', '280', 'Enables optional G722 filter in the first digital microphone', '', 'Enables optional G722 filter in the first digital microphone. Improves noise performance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'ff36a43003280a893fe48889ed478a5b';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '253', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '253', '', '0', '', '', '', '6f3cb7d4fd3ff7e9af68691ddd0afe6d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '6f3cb7d4fd3ff7e9af68691ddd0afe6d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '234');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '92d263df306eb04589000ab3a15ca3d4', 'Pcm1LongLengthSyncEnable', '71', 'Enable long length sync for second PCM instance', '', 'If Pcm1ShortSyncEnable is not set, this key will configure PCM_SYNC pulse
on second PCM instance to be 16 (long) or 8 (short) PCM_CLK cycles.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '92d263df306eb04589000ab3a15ca3d4';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '254', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '254', '', '0', '', '', '', '95fcc15229caa14b067158579827eb78');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '95fcc15229caa14b067158579827eb78';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '235');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e29544bb81b285690e0c71dcd1009e95', 'I2s2JstfyFormat', '137', 'Set sample justification for third I2S instance', '', '0: left justified, 1: right justified.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e29544bb81b285690e0c71dcd1009e95';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '255', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '255', '', '0', '', '', '', 'd6fc469d2819bb0824564acbf403c280');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd6fc469d2819bb0824564acbf403c280';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '236');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b03a67fec502808060a2889bf4fee069', 'TimedPlaybackIfactor', '420', 'Timed playback setting: I factor', '', 'I factor for the timed playback pid controller.

default value: FRACTIONAL(0.9) = 0x73333332 = 1932735282', '', '', '', '', '', '', '', '1', 'int32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b03a67fec502808060a2889bf4fee069';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '256', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '256', '', '1932735282', '', '', '', 'd06b19d3bcb58bc410bcf6cbaf2e3b9e');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd06b19d3bcb58bc410bcf6cbaf2e3b9e';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '237');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3b084cf8ffde06fcd343142b31c3d001', 'TimedPlaybackPfactor', '419', 'Timed playback setting: P factor', '', 'P factor for the timed playback pid controller.

default value: FRACTIONAL(1.0) = 0x7fffffff = 2147483647', '', '', '', '', '', '', '', '1', 'int32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3b084cf8ffde06fcd343142b31c3d001';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '257', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '257', '', '2147483647', '', '', '', '7dd9f84cd7ac14e30c1304652c907f23');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7dd9f84cd7ac14e30c1304652c907f23';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '238');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '394023f6ee1e67b6f4769c0449dfc2e1', 'Codec0OutputGain', '208', 'Gain for the first codec output', '', 'Output gain in approximate 3dB steps, with 15 corresponding to 0dB,
lower values to smaller gains (attenuation), and higher values to
larger gains. Depending on the range of gains implemented in a
device, settings towards the lower and upper ends of the range may
result in the same gain. Refer to the device datasheet for details.
When Codec0RawOutputGain is set, the value of this key will be ignored.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '22');
SELECT max(elem_uid) FROM config_elements WHERE hash = '394023f6ee1e67b6f4769c0449dfc2e1';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '258', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '258', '', '15', '', '', '', '6d36e9a8e837ce45df287f05cb4c26d3');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '6d36e9a8e837ce45df287f05cb4c26d3';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '239');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c316a057f4e3824bba4e1059190a471b', 'Spdif0InputSampleSize', '400', 'Sample size for the first SPDIF input', '', 'The sample size is either 16 bits or 24 bits.
16: 16 bit
24: 24 bit
This setting applies to both channels.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c316a057f4e3824bba4e1059190a471b';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '259', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '259', '', '24', '', '', '', '1beeb5b40f8cb1aa11034e37643181c3');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '1beeb5b40f8cb1aa11034e37643181c3';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '240');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '8a0492f285d2b2e2711318808db03619', 'Spdif3InPioConfig', '57', 'Input PIO configuration for fourth SPDIF instance', '', '            This key defines how input pin for fourth SPDIF instance (instance 3) is configured.
            The signal can be specified to use
                0 - 95: PIO number or
            If the signal is not required, it should be set to
                255: Unused', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '255');
SELECT max(elem_uid) FROM config_elements WHERE hash = '8a0492f285d2b2e2711318808db03619';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '260', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '260', '', '255', '', '', '', '96899c3abae719067c5771241110e764');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '96899c3abae719067c5771241110e764';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '241');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e63b01ef70e9715c1ae391920bc01749', 'I2s1SyncRate', '122', 'Synchronisation rate in hertz for second I2S instance', '', 'This key specifies the sync rate in hertz for the second digital
interface when operating as a master in I2S mode.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '48000');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e63b01ef70e9715c1ae391920bc01749';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '261', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '261', '', '8000', '', '', '', 'e5cfeefd6e20a94a350ee574f5e501ad');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e5cfeefd6e20a94a350ee574f5e501ad';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '242');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '87caf6f9ef05ff8784272b94b60e7691', 'I2s3ChnlPlrty', '151', 'I2S channel polarity for fourth I2S instance', '', '0: Sample data is left channel when sync clock line is high
1: Sample data is right channel when sync clock line is high', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '87caf6f9ef05ff8784272b94b60e7691';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '262', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '262', '', '1', '', '', '', '83cc76923c30cfbecd5bb01eac173651');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '83cc76923c30cfbecd5bb01eac173651';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '243');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '59655396d56f8d70e83f66b9ac7774f2', 'Spdif3OutPioConfig', '161', 'Output PIO configuration for fourth SPDIF instance', '', '            This key defines how output pin for fourth SPDIF instance (instance 3) is configured.
            The signal can be specified to use
                0 - 95: PIO number or
            If the signal is not required, it should be set to
                255: Unused', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '255');
SELECT max(elem_uid) FROM config_elements WHERE hash = '59655396d56f8d70e83f66b9ac7774f2';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '263', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '263', '', '255', '', '', '', 'fb3fe560ef7e50670320eb23d3af36ae');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fb3fe560ef7e50670320eb23d3af36ae';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '244');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '41863a2ff1a7e1b918b0fcbe629fb577', 'Spdif1ReceiveAccuracy', '405', 'Selects the receive frequency accuracy threshold for the second SPDIF input', '', '0: Low accuracy (approx. 1%)
1: High accuracy (approx. 0.4%)', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '41863a2ff1a7e1b918b0fcbe629fb577';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '264', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '264', '', '0', '', '', '', '38a3bd34504ccd32d7dbca3f3e1593aa');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '38a3bd34504ccd32d7dbca3f3e1593aa';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '245');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a209cb5cf48179a6a5f722f6f955bb12', 'I2s1JstfyFormat', '125', 'Set sample justification for second I2S instance', '', '0: left justified, 1: right justified.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a209cb5cf48179a6a5f722f6f955bb12';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '265', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '265', '', '0', '', '', '', '09b1722d9ffa3e7a898e143652e976cf');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '09b1722d9ffa3e7a898e143652e976cf';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '246');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '4d3169913fcb607936555e90aaaf9685', 'Pcm1SampleSize', '167', 'Sample size for the second PCM interface', '', 'This key supports formats up to 24 bit.
0: 13 bits in 16 cycle slot duration,
1: 16 bits in 16 cycle slot duration,
2: 8 bits in 16 cycle slot duration,
3: 8 bits in 8 cycle slot duration,
16: 16 bits in 16 cycle slot duration,
24: 24 bits in 24 cycle slot duration.
If this key is set, it takes precedence over Pcm1SampleFormat.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '4d3169913fcb607936555e90aaaf9685';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '266', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'aa4004ab22109507186426ba1cea1cd8', 'DigMic3G722FirEnable', '329', 'Enables optional G722 FIR filter in the fourth digital microphone', '', 'Enable optional FIR filter in the G722 filter to droop the response slightly.
This only has an effect if Codec0InputG722FilterEnable is also set.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'aa4004ab22109507186426ba1cea1cd8';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '267', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '267', '', '0', '', '', '', 'fee12098c1eba45ce9cc867a3a45e665');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fee12098c1eba45ce9cc867a3a45e665';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '247');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '07a05310c0b7213e179f33290ad72ae0', 'Pcm1SampleRisingEdgeEnable', '72', 'Sample PCM_DATA on rising edge of PCM_CLK for second PCM instance', '', '', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '07a05310c0b7213e179f33290ad72ae0';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '268', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '268', '', '1', '', '', '', 'ac4bd6f576669c93ad9806387c9dbac0');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ac4bd6f576669c93ad9806387c9dbac0';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '248');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'f1a1174292d18f53432cbb824a7b267a', 'DigMic0SidetoneGainA', '284', 'Configures the sidetone gain for the first channel of the first digital microphone', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'f1a1174292d18f53432cbb824a7b267a';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '269', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0a817c61729c74dfae23bb208e509d02', 'DigMic1SidetoneSourceB', '299', 'Configures the sidetone source point for the second channel of the second digital microphone', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0a817c61729c74dfae23bb208e509d02';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '270', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '270', '', '0', '', '', '', 'a389ea99f36ddd97e857b41c537d6f89');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a389ea99f36ddd97e857b41c537d6f89';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '249');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '18b4449ce4e08fd576f9ce8af70c25d8', 'PcmTxTristateEnable', '20', 'Enable Tx tristate for first PCM instance', '', '0: drive PCM_OUT continuously.
1: tri-state PCM_OUT immediately after falling edge of PCM_CLK in the
last bit of an active slot, assuming the next slot is not active.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '18b4449ce4e08fd576f9ce8af70c25d8';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '271', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '271', '', '0', '', '', '', 'd691e047237181c5adf938e8c4e18aac');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd691e047237181c5adf938e8c4e18aac';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '250');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e9d2fde7d44462925bc5139549661533', 'Pcm2SampleRisingEdgeEnable', '93', 'Sample PCM_DATA on rising edge of PCM_CLK for third PCM instance', '', '', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e9d2fde7d44462925bc5139549661533';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '272', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '272', '', '1', '', '', '', '4747313d5ad7f9978fa6a0b7b66f2fd7');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '4747313d5ad7f9978fa6a0b7b66f2fd7';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '251');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '692ee426fe8c76fac52185aa254081ad', 'PcmGciModeEnable', '23', 'Enable GCI mode for first PCM instance', '', 'Enable PCM GCI mode.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '692ee426fe8c76fac52185aa254081ad';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '273', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '273', '', '0', '', '', '', '746433857f713a10432381d848f2648c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '746433857f713a10432381d848f2648c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '252');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '858bd27fe8bdd44618c76a709ccd7f21', 'DigMic3InputRate', '320', 'Sample rate in Hz for the fourth digital microphone', '', 'This key specifies the sample rate in hertz for the fourth digital microphone.
Valid choices are: 8000, 11025, 12000, 16000, 22050, 24000, 32000, 40000, 44100,
48000 and 96000.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '96000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '858bd27fe8bdd44618c76a709ccd7f21';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '274', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '274', '', '8000', '', '', '', '45fb0ae05e6fe5abdaa2daefc1c7446e');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '45fb0ae05e6fe5abdaa2daefc1c7446e';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '253');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '46b76d9a4311b8e790d9d42c80c09334', 'PcmMasterMode', '14', 'Enable master mode on first PCM instance', '', 'Setting the key to TRUE configures the hardware to generate the clock and
sync signals on the first PCM instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '46b76d9a4311b8e790d9d42c80c09334';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '275', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '275', '', '1', '', '', '', 'f8fa357a62494c14972e207a7ee9fcce');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'f8fa357a62494c14972e207a7ee9fcce';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '254');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '895ac730e61477886859cdab62631682', 'I2s3LftJstfyDly', '150', 'Set delay before sampling when left justified for fourth I2S instance', '', '0: MSB of sample data occurs in the first bit clock period after sync transition.
1: MSB of sample data occurs in the second bit clock period after sync transition.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '895ac730e61477886859cdab62631682';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '276', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '276', '', '1', '', '', '', 'a002087c7903d8eb58e12e8f3ac228a1');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a002087c7903d8eb58e12e8f3ac228a1';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '255');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1070dd2004e181ad789e691056955b59', 'Codec0InputRoute', '197', 'Configures the signal routing within the first codec input', '', 'ADC chain routing:
0: IIR filter followed by Digital gain
1: Digital gain followed by IIR filter', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1070dd2004e181ad789e691056955b59';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '277', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '277', '', '0', '', '', '', '224b9cfd851e5bd5052b9930c13f3d28');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '224b9cfd851e5bd5052b9930c13f3d28';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '256');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c7cb1b29b151373c069814de93fd49ad', 'CodecInitialisationTime', '260', 'Delay for turning ON Codec hardware for first time', '', 'This is an internal key. For Crescendo this delay is required for the external CAP
associated with Bandgap reference current generator to charge up. Future chips may
have other requirements. The Codec interface will wait for the specified time the
first time a Codec endpoint is requested before making it available

For Stre, this delay is required for reducing the pop/click while enabling
the Class AB Amplifier. This value is in millisecond.', '', '', '', '', '', '', '', '1', 'uint16', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c7cb1b29b151373c069814de93fd49ad';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '278', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '278', '', '100', '', '', '', '2f727b034bf0071129e7881d9687bd2d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '2f727b034bf0071129e7881d9687bd2d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '257');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b0f298d8b459d6815f066d46318998c8', 'I2s1MasterMode', '124', 'Enable master mode on second I2S instance', '', 'Setting the key to TRUE configures the hardware to generate the clock and
sync signals on the second I2S instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b0f298d8b459d6815f066d46318998c8';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '279', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '279', '', '0', '', '', '', '2528a56dfce6b90b320d28be84e33f6e');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '2528a56dfce6b90b320d28be84e33f6e';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '258');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '8c99e7fe37fc466050fbe6c3f421256a', 'DigMic1G722FirEnable', '297', 'Enables optional G722 FIR filter in the second digital microphone', '', 'Enable optional FIR filter in the G722 filter to droop the response slightly.
This only has an effect if Codec0InputG722FilterEnable is also set.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '8c99e7fe37fc466050fbe6c3f421256a';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '280', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '280', '', '0', '', '', '', 'e259818961ba62b60e43c82efdff4fb6');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'e259818961ba62b60e43c82efdff4fb6';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '259');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '8ec8e099c795f6feac5e51916259367a', 'PcmPioConfig', '50', 'PIO configuration for first PCM/I2S instance', '', '            This key defines which chip pins the first PCM or I2S interface (instance 0)
            comes out on. (The same pins are shared by these two interfaces, so they
            cannot be used simultaneously.)
            The octet string key value contains a value each for the PCM signal lines
            CLK, SYNC, MCLK, DOUT & DIN (or, for I2S: SCK, WS, MCLK, SD_OUT, & SD_IN).
            Each signal can be specified to use
                0x00 - 0x5F: PIO number or
                0xFE: Dedicated pin as per chip pinout
            If the signal is not required, it should be set to
                0xFF: Unused
            Note that signals cannot be a combination of PIO and dedicated pins.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '5', '5');
SELECT max(elem_uid) FROM config_elements WHERE hash = '8ec8e099c795f6feac5e51916259367a';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '281', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '281', '', '', '', '', '', 'd932a56e69f3265bba6811f2665159f6');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'd932a56e69f3265bba6811f2665159f6';
INSERT INTO default_arrays (def_uid, value) VALUES ('260', '254');
INSERT INTO default_arrays (def_uid, value) VALUES ('260', '254');
INSERT INTO default_arrays (def_uid, value) VALUES ('260', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('260', '254');
INSERT INTO default_arrays (def_uid, value) VALUES ('260', '254');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '260');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '530448b6e52243f048d7e5ec1ea80e82', 'HeapOverflowToFreeRAM', '432', 'Heap overflow to free ram configuration', '', 'Enable this to enable the heap memory to overflow to the free ram', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '530448b6e52243f048d7e5ec1ea80e82';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '282', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '282', '', '1', '', '', '', '660966d47744b2c42a0e611e95e54bf4');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '660966d47744b2c42a0e611e95e54bf4';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '261');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '99ab91cedb7da63df6eab7319e74f475', 'Codec0RawOutputGain', '209', 'Low level gain control for the first codec output', '', 'The value for this key consists of bit fields for registers which
control the codec output gain. Refer to the device datasheet for details
of this setting.
When a valid value for this key is set, Codec0OutputGain will be ignored.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '99ab91cedb7da63df6eab7319e74f475';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '283', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '9513a6c29f600c6de4d23f67a5b189bd', 'PcmManchModeEnable', '15', 'Enable Manchester encoding mode for first PCM instance', '', 'Setting the key to TRUE enables manchester encoding on the first PCM instance.
Manchester encoding is only available if PcmUseLowJitterMode is NOT set', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '9513a6c29f600c6de4d23f67a5b189bd';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '284', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '284', '', '0', '', '', '', '711ebeba535895b6f6cb9f18d245bb4b');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '711ebeba535895b6f6cb9f18d245bb4b';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '262');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '24ecb79499fa93b05ad63d9f02275b9f', 'Pcm3MasterClockRate', '101', 'Fourth PCM interface override for clock rate', '', 'When acting as a master on the fourth digital interface in PCM mode, this key
allows the specification in hertz of the exact clock rate to be generated.

If set to zero, the firmware calculates the clock rate based
on the sync rate, bits per sample and slots per frame.

Note: the name MasterClockRate is historical; this key pertains to the bit
clock frequency, not the frequency of any MCLK signal in the system.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '0', '8000000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '24ecb79499fa93b05ad63d9f02275b9f';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '285', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '285', '', '1024000', '', '', '', '8131631e0e8bc83482a961d192faf32a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '8131631e0e8bc83482a961d192faf32a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '263');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a096e8074e62eabcd38d5949cb374ae5', 'Codec0InputSidetoneGainA', '204', 'Configures the sidetone gain for the first channel of the first codec input', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a096e8074e62eabcd38d5949cb374ae5';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '286', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a72533ccee326662bea907f9421805ca', 'Codec1InputSidetoneSourceA', '234', 'Configures the sidetone source point for the first channel of the second codec input', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a72533ccee326662bea907f9421805ca';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '287', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '287', '', '0', '', '', '', 'ed25d7fac3c154af8c0d97ff8a70467a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ed25d7fac3c154af8c0d97ff8a70467a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '264');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'fd29a931b01bc57fc28fc76acac5ef8a', 'DigMic0ChanSwap', '274', 'Swap the two channels of the first digital microphone', '', 'If set, the two channels of the first digital microphone are swapped,
i.e. the bit clock is inverted.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'fd29a931b01bc57fc28fc76acac5ef8a';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '288', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '288', '', '0', '', '', '', 'c8fccaf6282173cc7f580ba0b948b874');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'c8fccaf6282173cc7f580ba0b948b874';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '265');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '72e35cbbad813e59b43e16f347da636b', 'I2sSampleSize', '170', 'Sample size for the first I2S interface', '', 'The sample size is either 16 bits or 24 bits.
16: 16 bit
24: 24 bit
This setting applies to both input and output, and to both channels.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '16', '24');
SELECT max(elem_uid) FROM config_elements WHERE hash = '72e35cbbad813e59b43e16f347da636b';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '289', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '289', '', '16', '', '', '', '133abae8c8d4821f32b4467a7d01f185');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '133abae8c8d4821f32b4467a7d01f185';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '266');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'abff99220b5b6f0c6338ad5981281579', 'Codec0OutClsDAmpDitherEnable', '480', 'Enable Dither on Codec 0 output', '', '            Setting this MIB key whitens any tonal noise in the audio band
            with a small SNR degradation. This MIB is applicable only for
           Class D Closed loop mode.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'abff99220b5b6f0c6338ad5981281579';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '290', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '290', '', '1', '', '', '', '7f2f04fdec67a81e3dcabe5c524fc478');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7f2f04fdec67a81e3dcabe5c524fc478';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '267');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '729a61f6f820156c9cf7bb53b8d43012', 'RemoteWdPingTimeout', '416', 'Watchdog timeout multiplier for pinging secondary processor.', '', '     Defines the period (in terms of multiples of Curator watchdog pings) during
     which 0 will wait for a response from secondary processor.
     Value 0 is intended for debugging purposes and causes 0 to report success
     regardless of status of the secondary processor.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '10');
SELECT max(elem_uid) FROM config_elements WHERE hash = '729a61f6f820156c9cf7bb53b8d43012';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '291', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '291', '', '2', '', '', '', '5d1421b462295698f93b24d2db9a351a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '5d1421b462295698f93b24d2db9a351a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '268');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0567df6dba10e985bbc572fe432a9f80', 'Codec1InputRate', '226', 'The sample rate in Hz for the second codec input', '', 'This key specifies the sample rate in hertz for the second codec input.
Valid choices are: 8000, 11025, 12000, 16000, 22050, 24000, 32000, 40000, 44100,
48000 and 96000.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '96000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0567df6dba10e985bbc572fe432a9f80';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '292', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '292', '', '8000', '', '', '', 'ae207218790db831f5c09a83a868f9a9');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ae207218790db831f5c09a83a868f9a9';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '269');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'eec63faf7196d6518561c19be79fd70e', 'Pcm3AudioGain', '119', 'Sample gain value for fourth PCM instance', '', 'Some Codecs allow their gain to be controlled by 3 extra bits
received at the end of a 13-bit PCM sample. This key allows the
value of those 3 bits to be specified for the fourth PCM instance.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '7');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'eec63faf7196d6518561c19be79fd70e';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '293', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '293', '', '0', '', '', '', '27e7a65ee38ab4647ad0388d686c4f8a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '27e7a65ee38ab4647ad0388d686c4f8a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '270');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '2c4e5912a2bd5e8119c7478af009e5f5', 'DigMic3SidetoneGainA', '332', 'Configures the sidetone gain for the first channel of the fourth digital microphone', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = '2c4e5912a2bd5e8119c7478af009e5f5';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '294', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'fada120db43021e3140fc4d8c72bde83', 'Pcm2MasterClockRate', '80', 'Third PCM interface override for clock rate', '', 'When acting as a master on the third digital interface in PCM mode, this key
allows the specification in hertz of the exact clock rate to be generated.

If set to zero, the firmware calculates the clock rate based
on the sync rate, bits per sample and slots per frame.

Note: the name MasterClockRate is historical; this key pertains to the bit
clock frequency, not the frequency of any MCLK signal in the system.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '0', '8000000');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'fada120db43021e3140fc4d8c72bde83';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '295', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '295', '', '1024000', '', '', '', '172c72cbd692a18e54e161e109890ad7');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '172c72cbd692a18e54e161e109890ad7';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '271');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1bca3008e8bd5214f116c1d2b447a6b7', 'USBSinkInputBufferSize', '436', 'Configures the USB sink endpoint input buffer size (in words)', '', 'The input buffer of USB sink endpoint needs to be large enough to not fill up during
the period that endpoint cannot send packets because its output buffer has the maximum
number of packets. This situation can happen if the reader of output buffer (apps normally)
is in busy time. Set this to a value corresponding to twice of USB audio packets configured
by USBSinkMaxPacketsInOutputBuffer MIB key.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '4800');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1bca3008e8bd5214f116c1d2b447a6b7';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '296', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '296', '', '576', '', '', '', '327bde85e032673a536ff802a1bfe592');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '327bde85e032673a536ff802a1bfe592';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '272');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '7526ef601f5bb1f19dc90d80f6fee404', 'PcmAudioGain', '31', 'Sample gain value for first PCM instance', '', 'Some Codecs allow their gain to be controlled by 3 extra bits
received at the end of a 13-bit PCM sample. This key allows the
value of those 3 bits to be specified for the first PCM instance.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '7');
SELECT max(elem_uid) FROM config_elements WHERE hash = '7526ef601f5bb1f19dc90d80f6fee404';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '297', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '297', '', '0', '', '', '', 'bf9c37d13408b7137b68d781120656e0');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'bf9c37d13408b7137b68d781120656e0';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '273');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'de7a7071b28fc871555b06673ceac4b3', 'Pcm2SyncSuppressEnable', '89', 'Suppress frame synchronisation for third PCM instance', '', 'Suppress PCM_SYNC on the third PCM instance while generating PCM_CLK (in master mode).
Some codecs (connected to the PCM interface) use this to enter a low power state.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'de7a7071b28fc871555b06673ceac4b3';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '298', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '298', '', '0', '', '', '', '8d87592d298daa3e1557349302475b6d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '8d87592d298daa3e1557349302475b6d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '274');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'cbf0af3c459eb821c7099221846cb81f', 'StubStr', '2', 'Dummy string MIB entry', '', 'A MIB string entry that can be harmlessly read or written, e.g.,
for testing.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '0', '128');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'cbf0af3c459eb821c7099221846cb81f';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '299', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'b4ad2535c9e08ed6e9923990b21ec3de', 'DigMic0G722FirEnable', '281', 'Enables optional G722 FIR filter in the first digital microphone', '', 'Enable optional FIR filter in the G722 filter to droop the response slightly.
This only has an effect if Codec0InputG722FilterEnable is also set.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'b4ad2535c9e08ed6e9923990b21ec3de';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '300', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '300', '', '0', '', '', '', 'b8eb9d3dc74135ab0a998367b36d3616');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'b8eb9d3dc74135ab0a998367b36d3616';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '275');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'f149db5e88043dd33303231ee9bb5c90', 'PatchSpareValue2', '10', 'Spare MIB key 2 for use when patching, value only', '', 'This MIB key is not used in standard builds, but may be used by
patch code. It must be retrieved by standard MIB calls.', '', '', '', '', '', '', '', '1', 'uint32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'f149db5e88043dd33303231ee9bb5c90';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '301', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '3c89194d39b37481ab4da6fbe015504e', 'AncEnableDelay', '471', 'Enable delay for ANC', '', '                Delay required in milliseconds after enabling the codec output
                while enabling ANC to reduce pops and clicks.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '65535');
SELECT max(elem_uid) FROM config_elements WHERE hash = '3c89194d39b37481ab4da6fbe015504e';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '302', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '302', '', '10', '', '', '', 'a062fcc8276378f2b55b8c7496c3fefa');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a062fcc8276378f2b55b8c7496c3fefa';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '276');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '6da974bbd1bb2dbcb61e4a51bc793dc6', 'Pcm3MasterMode', '102', 'Enable PCM master mode for fourth PCM instance', '', 'Setting the key to TRUE configures the hardware to generate the clock and
sync signals on the fourth PCM instance.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '6da974bbd1bb2dbcb61e4a51bc793dc6';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '303', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '303', '', '1', '', '', '', 'a8261649b2f33993d76fb276899a3459');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'a8261649b2f33993d76fb276899a3459';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '277');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '133359539cb0b5ea85476f2e1e8776d9', 'PatchSpareValue1', '9', 'Spare MIB key 1 for use when patching, value only', '', 'This MIB key is not used in standard builds, but may be used by
patch code. It must be retrieved by standard MIB calls.', '', '', '', '', '', '', '', '1', 'uint32', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '133359539cb0b5ea85476f2e1e8776d9';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '304', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '298d6e0e691742a6690e7ebe03949c88', 'Pcm2PioConfig', '52', 'PIO configuration for third PCM/I2S instance', '', '            This key defines which chip pins the third PCM or I2S interface (instance 2)
            comes out on. (The same pins are shared by these two interfaces, so they
            cannot be used simultaneously.)
            The octet string key value contains a value each for the PCM signal lines
            CLK, SYNC, MCLK, DOUT & DIN (or, for I2S: SCK, WS, MCLK, SD_OUT, & SD_IN).
            Each signal can be specified to use
                0x00 - 0x5F: PIO number or
                0xFE: Dedicated pin as per chip pinout
            If the signal is not required, it should be set to
                0xFF: Unused
            Note that signals cannot be a combination of PIO and dedicated pins.', '', '', '', '', '', '', '', '0', 'octet_string', '', '0', '', '', '5', '5');
SELECT max(elem_uid) FROM config_elements WHERE hash = '298d6e0e691742a6690e7ebe03949c88';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '305', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '305', '', '', '', '', '', '6a913662eb2355c02cdccb4244e05174');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '6a913662eb2355c02cdccb4244e05174';
INSERT INTO default_arrays (def_uid, value) VALUES ('278', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('278', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('278', '255');
INSERT INTO default_arrays (def_uid, value) VALUES ('278', '254');
INSERT INTO default_arrays (def_uid, value) VALUES ('278', '254');
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '278');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '980c4ce4bc2e50220ae56e6a7c5cc7ed', 'Codec1OutputRate', '242', 'The sample rate in Hz for the second codec output', '', 'This key specifies the sample rate in hertz for the second codec output.
Supported sample rates are: 8000, 11025, 12000, 16000, 22050, 24000, 32000,
40000, 44100, 48000, 96000 and 192000.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '192000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '980c4ce4bc2e50220ae56e6a7c5cc7ed';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '306', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '306', '', '8000', '', '', '', 'c008a424b9a38cb3f8c7e3083da7b28d');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'c008a424b9a38cb3f8c7e3083da7b28d';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '279');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'd5fea9a4a51e1c4b895ebbd797dd98db', 'DigMic1SidetoneGainB', '301', 'Configures the sidetone gain for the second channel of the second digital microphone', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'd5fea9a4a51e1c4b895ebbd797dd98db';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '307', '');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'f2848f65b35046d7a2cdf8a39e0712e5', 'I2s3RxStartSample', '157', 'Defines when RX begins for fourth I2S instance', '', '0: I2S reception begins during low sync clock phase.
1: I2S reception begins during high sync clock phase.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'f2848f65b35046d7a2cdf8a39e0712e5';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '308', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '308', '', '1', '', '', '', '674eb1f772640f1ca6df14177376760f');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '674eb1f772640f1ca6df14177376760f';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '280');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'c1bbb5a8a648585d1a18cbbda4a23774', 'Pcm1AudioGain', '77', 'Sample gain value for second PCM instance', '', 'Some Codecs allow their gain to be controlled by 3 extra bits
received at the end of a 13-bit PCM sample. This key allows the
value of those 3 bits to be specified for the second PCM instance.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '7');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'c1bbb5a8a648585d1a18cbbda4a23774';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '309', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '309', '', '0', '', '', '', '39f5800e8152894a0a2f6bc75156d2fb');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '39f5800e8152894a0a2f6bc75156d2fb';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '281');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '0c9f161d1b2f3ec717bf09dfafa13d86', 'Codec0OutputIndividualSidetoneEnableA', '214', 'Enables adding sidetone to the first channel of the first codec output', '', 'Source channels also have to be selected using Codec0OutputSourceMaskA.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '0c9f161d1b2f3ec717bf09dfafa13d86';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '310', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '310', '', '0', '', '', '', '01a4e39771e07180dfe64f41f0246537');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '01a4e39771e07180dfe64f41f0246537';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '282');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '472859d63e87c856ffb11e7442e7b28a', 'Pcm2LongLengthSyncEnable', '92', 'Enable long length sync for third PCM instance', '', 'If Pcm2ShortSyncEnable is not set, this key will configure PCM_SYNC pulse
on third PCM instance to be 16 (long) or 8 (short) PCM_CLK cycles.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '472859d63e87c856ffb11e7442e7b28a';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '311', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '311', '', '0', '', '', '', '6c96fe45ce5b7f3b4b625e4ceb2a2b79');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '6c96fe45ce5b7f3b4b625e4ceb2a2b79';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '283');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'ef0dd615e45ce8cbc71a3c68c7e865fa', 'Codec0InputSidetoneSourceA', '202', 'Configures the sidetone source point for the first channel of the first codec input', '', 'The valid choices are:
0: Sidetone signal is taken from the output of the ADC IIR filter (default),
1: Sidetone signal is taken from the output of the digital gain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'ef0dd615e45ce8cbc71a3c68c7e865fa';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '312', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '312', '', '0', '', '', '', 'ecdcf9810fb0cd430a9197d8284c68ef');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'ecdcf9810fb0cd430a9197d8284c68ef';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '284');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '95fd2a1e32364a5f42b457b15b55f744', 'USBSourceInputBufferSize', '435', 'Configures the From Host USB (USB Rx) input buffer size in octets', '', 'This key configures the size of the input buffer for USB Source (from Host) endpoint,
the size will be rounded up to nearest power of two value. The input buffer needs to
be able to contain at least 2 audio packets to cover jitter in the system. The required buffer
size varies depending on the largest sample rate, channels and the frame size that are going to
be supported. Use the production of the following terms to configure the buffer size:terms:

maximum number of packets: use 2
channels: maximum number of channels to be supported (2 for stereo)
subframe_size: number of octets in each audio sub frame (3 for 24-bit support)
max packet len in frames: use (max_sample_rate/1000 + 1)', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '4096');
SELECT max(elem_uid) FROM config_elements WHERE hash = '95fd2a1e32364a5f42b457b15b55f744';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '313', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '313', '', '1024', '', '', '', 'bfe1e2ee70118ffe99ab827e040d05a5');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'bfe1e2ee70118ffe99ab827e040d05a5';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '285');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '81d2bd260290db300a85171aec55af07', 'PcmTxTristateRisingEdgeEnable', '21', 'Enable Tx tristate rising edge for first PCM instance', '', 'This key is only effective if PcmTxTristateEnable is set
0: tri-state PCM_OUT immediately after falling edge of PCM_CLK in
last bit of an active slot, assuming the next slot is also not active.
1: tri-state PCM_OUT after rising edge of PCM_CLK after the last data
bit of an active slot.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '81d2bd260290db300a85171aec55af07';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '314', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '314', '', '0', '', '', '', '35d98317ac550781ce0d0a0546b89dcc');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '35d98317ac550781ce0d0a0546b89dcc';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '286');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'dbb080139e6e0cd1605d5e528377c3ae', 'I2s3CropEnable', '155', 'Takes first 16bits after sync edge as sample for fourth I2S instance', '', 'In this mode the most significant bits after sync are taken to be the sample data.
If I2s3BitsPerSample is configured for 24/32 bits per sample, but I2s3SampleSize is
configured for 16 bits per sample only, then crop enable decides whether the I2S
interface rounds or truncates incoming 24/32 bits to 16 bits.

Additionally, it must be enabled if in 16 bit per sample mode when CLK rate = 32*sample rate.

0: Disable Cropping(or select rounding)
1: Enable Cropping

From CSRA681xx, the crop mode is selected automatically, and there is no need to
set this key; it should be left at its default value.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'dbb080139e6e0cd1605d5e528377c3ae';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '315', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '315', '', '1', '', '', '', '32557c54445be76b09fab2f455aa296f');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '32557c54445be76b09fab2f455aa296f';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '287');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'bad0d47cada116b88be8c746eedbdedb', 'I2s3JstfyFormat', '149', 'Set sample justification for fourth I2S instance', '', '0: left justified, 1: right justified.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'bad0d47cada116b88be8c746eedbdedb';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '316', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '316', '', '0', '', '', '', '15926420337b2b1e94179a9a8ca09cdd');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '15926420337b2b1e94179a9a8ca09cdd';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '288');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'e2935e5dab1528a19fc46942174457eb', 'I2s3AudioAttenEnable', '152', 'Enable attenuation on input data for fourth I2S instance', '', 'Enables/disables the attenuation applied to incoming (into device) audio samples in case the I2s3BitsPerSample
is set to 20 or 24 bits per sample on the fourth I2S instance.

false: 17 bit sample data is rounded down to 16 bits.
true : the audio attenuation defined in the MIB key I2s3AudioAtten is applied over 24 bits with saturated rounding.

Requires I2s3CropEnable to be 0.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'e2935e5dab1528a19fc46942174457eb';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '317', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '317', '', '0', '', '', '', 'fc17be6ccec10bd307f4ccb7232ba898');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'fc17be6ccec10bd307f4ccb7232ba898';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '289');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '9f5d1fb4f44e5d4ebb225ab2c9cd812f', 'I2sChnlPlrty', '38', 'I2S channel polarity for first I2S instance', '', '0: Sample data is left channel when sync clock line is high
1: Sample data is right channel when sync clock line is high', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '1');
SELECT max(elem_uid) FROM config_elements WHERE hash = '9f5d1fb4f44e5d4ebb225ab2c9cd812f';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '318', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '318', '', '1', '', '', '', '89925bc02ef8fdb5546f661fa47c3e2a');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '89925bc02ef8fdb5546f661fa47c3e2a';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '290');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '86badb6cfa539008724464c3349c5392', 'Codec0InputRate', '194', 'The sample rate in Hz for the first codec input', '', 'This key specifies the sample rate in hertz for the first codec input.
Valid choices are: 8000, 11025, 12000, 16000, 22050, 24000, 32000, 40000, 44100,
48000 and 96000.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '96000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '86badb6cfa539008724464c3349c5392';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '319', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '319', '', '8000', '', '', '', '7deeca39173a9c53142b5bbfc2870d85');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7deeca39173a9c53142b5bbfc2870d85';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '291');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '9c9d4ea3fad3c2f1683898620ddb8c9a', 'I2s3SyncRate', '146', 'Synchronisation rate in hertz for fourth I2S instance', '', 'This key specifies the sync rate in hertz for the fourth digital
interface when operating as a master in I2S mode.', '', '', '', '', '', '', '', '0', 'uint32', '', '0', '', '', '8000', '48000');
SELECT max(elem_uid) FROM config_elements WHERE hash = '9c9d4ea3fad3c2f1683898620ddb8c9a';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '320', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '320', '', '8000', '', '', '', '6cf2bc03bdadd6d851fa9e91b2f6244c');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '6cf2bc03bdadd6d851fa9e91b2f6244c';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '292');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'eb831ab27eb3106397e60d46e2cd467e', 'I2s2CropEnable', '143', 'Takes first 16bits after sync edge as sample for third I2S instance', '', 'In this mode the most significant bits after sync are taken to be the sample data.
If I2s2BitsPerSample is configured for 24/32 bits per sample, but I2s2SampleSize is
configured for 16 bits per sample only, then crop enable decides whether the I2S
interface rounds or truncates incoming 24/32 bits to 16 bits.

Additionally, it must be enabled if in 16 bit per sample mode when CLK rate = 32*sample rate.

0: Disable Cropping(or select rounding)
1: Enable Cropping

From CSRA681xx, the crop mode is selected automatically, and there is no need to
set this key; it should be left at its default value.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'eb831ab27eb3106397e60d46e2cd467e';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '321', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '321', '', '1', '', '', '', '519f5f4ed769b9435b5d4081ad9ef703');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '519f5f4ed769b9435b5d4081ad9ef703';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '293');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, 'a5e7d6ab1bc23d9cad95acab4a658e52', 'Pcm2UseLowJitterMode', '99', 'Force third PCM interface clock to use low jitter mode when running at 8 kHz', '', 'For some very specific PCM configurations, this configures the clock source used to generate CLK and SYNC for third PCM instance.
0: a fixed internal clock is used
1: a more flexible clock generator driven from a higher-frequency internal clock is used

This only takes effect with a sync rate of 8kHz and a bit clock rate of 128/256/512kHz; in other configurations, it is forced to 1.
Various other configuration parameters can also cause it to be forced to 1. Not all non-default PCM features may work if this is set to 0.

Selecting low jitter mode increases power consumption.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = 'a5e7d6ab1bc23d9cad95acab4a658e52';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '322', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '322', '', '0', '', '', '', 'b7fff4879f59df295222985fc1f42cd1');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = 'b7fff4879f59df295222985fc1f42cd1';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '294');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '9a0430c86ff00339b796c0423506e3be', 'PcmUseLowJitterMode', '32', 'Force first PCM interface clock to use low jitter mode when running at 8 kHz', '', 'For some very specific PCM configurations, this configures the clock source used to generate CLK and SYNC for first PCM instance.
0: a fixed internal clock is used
1: a more flexible clock generator driven from a higher-frequency internal clock is used

This only takes effect with a sync rate of 8kHz and a bit clock rate of 128/256/512kHz; in other configurations, it is forced to 1.
Various other configuration parameters can also cause it to be forced to 1. Not all non-default PCM features may work if this is set to 0.

Selecting low jitter mode increases power consumption.', '', '', '', '', '', '', '', '0', 'boolean', '', '0', '', '', '', '');
SELECT max(elem_uid) FROM config_elements WHERE hash = '9a0430c86ff00339b796c0423506e3be';
SELECT enum_uid FROM enum_defs WHERE enum_name = 'boolean';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '323', '1');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '323', '', '0', '', '', '', '7a6d63d5efee3321d69ede5d746c9fec');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '7a6d63d5efee3321d69ede5d746c9fec';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '295');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '1c1e84eae48f9b533f32662b01171fa1', 'DigMic2InputGain', '305', 'Input gain for the third digital microphone', '', 'This is a bitfield value. If bit 15 is cleared, the lower 4 bits contain
a gain in 2''s complement format, zero representing unity gain, and roughly 3dB steps.
I.e. the approximate gains for each value between 0x0000 and 0x000F are:
0x0007: 21dB
0x0006: 18dB
0x0005: 15dB
0x0004: 12dB
0x0003: 9dB
0x0002: 6dB
0x0001: 3dB
0x0000: 0dB
0x000F: -3dB
0x000E: -6dB
0x000D: -9dB
0x000C: -12dB
0x000B: -15dB
0x000A: -18dB
0x0009: -21dB
0x0008: -24dB

If bit 15 is set, the lower 9 bits represent a linear gain scale in steps of 1/32,
i.e. from 0x8000 = mute, 0x8001 = approx. -30dB, to 0x81FF = approx. 24dB.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '65535');
SELECT max(elem_uid) FROM config_elements WHERE hash = '1c1e84eae48f9b533f32662b01171fa1';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '324', '');
INSERT INTO config_element_default_values (def_uid, elem_uid, value_string, value_int, index1_value, index2_value, index3_value, hash) VALUES (NULL, '324', '', '0', '', '', '', '1ca515139af6f88704a41b77e7f973f0');
SELECT max(def_uid) FROM config_element_default_values WHERE hash = '1ca515139af6f88704a41b77e7f973f0';
INSERT INTO subfw_defaults (subfw_uid, def_uid) VALUES ('1', '296');
INSERT INTO config_elements (elem_uid, hash, name, psid, label, category, description_user, description_internal, oid, source_reference, source_default, units, access_rights, additional_information, is_internal, type, format, is_array, array_length_min, array_length_max, range_min, range_max) VALUES(NULL, '12d8b28fe8fe85c33f09c6bf52abdd16', 'DigMic1SidetoneGainA', '300', 'Configures the sidetone gain for the first channel of the second digital microphone', '', 'The gain is specified as an unsigned 4-bit value, with approximate 3dB steps, and unity gain for a value of 11.
I.e. the range is approximately -33dB to +12dB.
If this key is not set, the gain is taken from the key SidetoneGain.', '', '', '', '', '', '', '', '0', 'uint16', '', '0', '', '', '0', '15');
SELECT max(elem_uid) FROM config_elements WHERE hash = '12d8b28fe8fe85c33f09c6bf52abdd16';
INSERT INTO subfw_elements (subfw_uid, elem_uid, enum_uid)VALUES('1', '325', '');
Adding system information to /home/svc-audio-dspsw/kymera_builds/builds/2019/kymera_1912051504/kalimba/kymera/output/stre_rom_kalsim_kalcmd2_release/gen/audio_mib.sdb
Adding system version DevIDString.
Chip = NoProductNoROM patch 0
Build date = now
Description = Dummy system for audio subsystem firmware 8991
SELECT max(system_uid) FROM system_versions
system_uid = 1
audio version 8991
SELECT max(subfw_uid) FROM subsystem_firmware_versions WHERE subsystem_name='audio' and version='8991' and variant='0';
subfw_uid = 1
INSERT INTO system_subfw_versions (system_uid, subfw_uid) VALUES ('1', '1');
INSERT INTO system_efuse_hashes (system_uid, efuse_hash) VALUES ('1', '4660');
SELECT hash FROM enum_defs WHERE enum_uid in (SELECT enum_uid FROM subfw_elements WHERE subfw_uid='1');
SELECT hash FROM config_tables WHERE table_uid in (SELECT table_uid FROM subfw_elements WHERE subfw_uid='1');
SELECT hash FROM config_element_default_values WHERE def_uid in (SELECT def_uid FROM subfw_defaults WHERE subfw_uid='1');
SELECT hash FROM config_elements WHERE elem_uid in (SELECT elem_uid FROM subfw_elements WHERE subfw_uid='1');
SELECT version FROM subsystem_firmware_versions WHERE subfw_uid='1';
INSERT INTO system_versions (system_uid, chip_name, chip_id, rom_name, rom_version, patch_release_level, system_version_label, system_description, customer_name, system_release_date_time, metadata_hash) VALUES (NULL, 'NoProduct', '73', 'NoROM', '1', '0', 'DevIDString', 'Dummy system for audio subsystem firmware 8991', 'Generic', '2019-12-05 15:13:09', 'fc83e75ab7bb0eb748a02caaab3f93f2')
MIB definition database /home/svc-audio-dspsw/kymera_builds/builds/2019/kymera_1912051504/kalimba/kymera/output/stre_rom_kalsim_kalcmd2_release/gen/audio_mib.sdb successfully created.
For more details see /home/svc-audio-dspsw/kymera_builds/builds/2019/kymera_1912051504/kalimba/kymera/output/stre_rom_kalsim_kalcmd2_release/genhyconfdbutil.log
